{"version":3,"sources":["components/form/InputAreaTwo.js","utils/timezones.js","components/form/SelectTimeZone.js","hooks/useSettingSubmit.js","components/form/SelectCurrency.js","components/form/SelectPrintSize.js","pages/Setting.js","services/CurrencyServices.js","assets/img/spinner.gif","components/Typography/PageTitle.js"],"names":["InputAreaTwo","_ref","register","defaultValue","required","name","label","type","placeholder","_jsx","_Fragment","children","Input","autoComplete","className","timeZones","tzCode","utc","SelectTimeZone","_jsxs","Select","value","hidden","map","timeZone","i","useSettingSubmit","id","setIsUpdate","useContext","SidebarContext","isSave","setIsSave","useState","isSubmitting","setIsSubmitting","handleSubmit","setValue","formState","errors","useForm","useEffect","res","SettingServices","getGlobalSetting","number_of_image_per_product","shop_name","address","company_name","vat_number","post_code","contact","email","website","receipt_size","default_currency","default_time_zone","default_date_format","err","_err$response2","_err$response2$data","notifyError","response","data","message","onSubmit","async","settingData","setting","addGlobalSetting","notifySuccess","updateGlobalSetting","_err$response","_err$response$data","SelectCurrency","loading","currencies","console","log","currency","symbol","_id","SelectReceiptSize","setPosCustomer","pos","onChange","e","target","Setting","t","useTranslation","color","setColor","setCurrencies","CurrencyServices","getAllCurrency","then","sortedCurrencies","sort","a","b","priority","catch","error","PageTitle","Error","errorName","event","Button","disabled","src","spinnerLoadingImage","alt","width","height","requests","get","updatePriorities","patch","getShowingCurrency","getCurrencyById","addCurrency","post","body","addAllCurrency","updateCurrency","put","updateManyCurrencies","updateEnabledStatus","updateLiveExchangeRateStatus","deleteCurrency","delete","deleteManyCurrency"],"mappings":"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","file":"static/js/31.4aff2a37.chunk.js","sourcesContent":["import { Input } from '@windmill/react-ui';\n\nconst InputAreaTwo = ({\n  register,\n  defaultValue,\n  required,\n  name,\n  label,\n  type,\n  placeholder,\n}) => {\n  return (\n    <>\n      <Input\n        {...register(`${name}`, {\n          required: required ? false : `${label} is required!`,\n        })}\n        defaultValue={defaultValue}\n        type={type}\n        placeholder={placeholder}\n        name={name}\n        autoComplete=\"new-password\"\n        className=\"border h-12 text-sm focus:outline-none block w-full bg-gray-100 dark:bg-white border-transparent focus:bg-white\"\n      />\n    </>\n  );\n};\n\nexport default InputAreaTwo;\n","const timeZone = [\n  {\n    value: \"Dateline Standard Time\",\n    abbr: \"DST\",\n    offset: -12,\n    isdst: false,\n    text: \"(UTC-12:00) International Date Line West\",\n  },\n  {\n    value: \"UTC-11\",\n    abbr: \"U\",\n    offset: -11,\n    isdst: false,\n    text: \"(UTC-11:00) Coordinated Universal Time-11\",\n  },\n  {\n    value: \"Hawaiian Standard Time\",\n    abbr: \"HST\",\n    offset: -10,\n    isdst: false,\n    text: \"(UTC-10:00) Hawaii\",\n  },\n  {\n    value: \"Alaskan Standard Time\",\n    abbr: \"AKDT\",\n    offset: -8,\n    isdst: true,\n    text: \"(UTC-09:00) Alaska\",\n  },\n  {\n    value: \"Pacific Standard Time (Mexico)\",\n    abbr: \"PDT\",\n    offset: -7,\n    isdst: true,\n    text: \"(UTC-08:00) Baja California\",\n  },\n  {\n    value: \"Pacific Standard Time\",\n    abbr: \"PDT\",\n    offset: -7,\n    isdst: true,\n    text: \"(UTC-08:00) Pacific Time (US & Canada)\",\n  },\n  {\n    value: \"US Mountain Standard Time\",\n    abbr: \"UMST\",\n    offset: -7,\n    isdst: false,\n    text: \"(UTC-07:00) Arizona\",\n  },\n  {\n    value: \"Mountain Standard Time (Mexico)\",\n    abbr: \"MDT\",\n    offset: -6,\n    isdst: true,\n    text: \"(UTC-07:00) Chihuahua, La Paz, Mazatlan\",\n  },\n  {\n    value: \"Mountain Standard Time\",\n    abbr: \"MDT\",\n    offset: -6,\n    isdst: true,\n    text: \"(UTC-07:00) Mountain Time (US & Canada)\",\n  },\n  {\n    value: \"Central America Standard Time\",\n    abbr: \"CAST\",\n    offset: -6,\n    isdst: false,\n    text: \"(UTC-06:00) Central America\",\n  },\n  {\n    value: \"Central Standard Time\",\n    abbr: \"CDT\",\n    offset: -5,\n    isdst: true,\n    text: \"(UTC-06:00) Central Time (US & Canada)\",\n  },\n  {\n    value: \"Central Standard Time (Mexico)\",\n    abbr: \"CDT\",\n    offset: -5,\n    isdst: true,\n    text: \"(UTC-06:00) Guadalajara, Mexico City, Monterrey\",\n  },\n  {\n    value: \"Canada Central Standard Time\",\n    abbr: \"CCST\",\n    offset: -6,\n    isdst: false,\n    text: \"(UTC-06:00) Saskatchewan\",\n  },\n  {\n    value: \"SA Pacific Standard Time\",\n    abbr: \"SPST\",\n    offset: -5,\n    isdst: false,\n    text: \"(UTC-05:00) Bogota, Lima, Quito\",\n  },\n  {\n    value: \"Eastern Standard Time\",\n    abbr: \"EDT\",\n    offset: -4,\n    isdst: true,\n    text: \"(UTC-05:00) Eastern Time (US & Canada)\",\n  },\n  {\n    value: \"US Eastern Standard Time\",\n    abbr: \"UEDT\",\n    offset: -4,\n    isdst: true,\n    text: \"(UTC-05:00) Indiana (East)\",\n  },\n  {\n    value: \"Venezuela Standard Time\",\n    abbr: \"VST\",\n    offset: -4.5,\n    isdst: false,\n    text: \"(UTC-04:30) Caracas\",\n  },\n  {\n    value: \"Paraguay Standard Time\",\n    abbr: \"PST\",\n    offset: -4,\n    isdst: false,\n    text: \"(UTC-04:00) Asuncion\",\n  },\n  {\n    value: \"Atlantic Standard Time\",\n    abbr: \"ADT\",\n    offset: -3,\n    isdst: true,\n    text: \"(UTC-04:00) Atlantic Time (Canada)\",\n  },\n  {\n    value: \"Central Brazilian Standard Time\",\n    abbr: \"CBST\",\n    offset: -4,\n    isdst: false,\n    text: \"(UTC-04:00) Cuiaba\",\n  },\n  {\n    value: \"SA Western Standard Time\",\n    abbr: \"SWST\",\n    offset: -4,\n    isdst: false,\n    text: \"(UTC-04:00) Georgetown, La Paz, Manaus, San Juan\",\n  },\n  {\n    value: \"Pacific SA Standard Time\",\n    abbr: \"PSST\",\n    offset: -4,\n    isdst: false,\n    text: \"(UTC-04:00) Santiago\",\n  },\n  {\n    value: \"Newfoundland Standard Time\",\n    abbr: \"NDT\",\n    offset: -2.5,\n    isdst: true,\n    text: \"(UTC-03:30) Newfoundland\",\n  },\n  {\n    value: \"E. South America Standard Time\",\n    abbr: \"ESAST\",\n    offset: -3,\n    isdst: false,\n    text: \"(UTC-03:00) Brasilia\",\n  },\n  {\n    value: \"Argentina Standard Time\",\n    abbr: \"AST\",\n    offset: -3,\n    isdst: false,\n    text: \"(UTC-03:00) Buenos Aires\",\n  },\n  {\n    value: \"SA Eastern Standard Time\",\n    abbr: \"SEST\",\n    offset: -3,\n    isdst: false,\n    text: \"(UTC-03:00) Cayenne, Fortaleza\",\n  },\n  {\n    value: \"Greenland Standard Time\",\n    abbr: \"GDT\",\n    offset: -2,\n    isdst: true,\n    text: \"(UTC-03:00) Greenland\",\n  },\n  {\n    value: \"Montevideo Standard Time\",\n    abbr: \"MST\",\n    offset: -3,\n    isdst: false,\n    text: \"(UTC-03:00) Montevideo\",\n  },\n  {\n    value: \"Bahia Standard Time\",\n    abbr: \"BST\",\n    offset: -3,\n    isdst: false,\n    text: \"(UTC-03:00) Salvador\",\n  },\n  {\n    value: \"UTC-02\",\n    abbr: \"U\",\n    offset: -2,\n    isdst: false,\n    text: \"(UTC-02:00) Coordinated Universal Time-02\",\n  },\n  {\n    value: \"Mid-Atlantic Standard Time\",\n    abbr: \"MDT\",\n    offset: -1,\n    isdst: true,\n    text: \"(UTC-02:00) Mid-Atlantic - Old\",\n  },\n  {\n    value: \"Azores Standard Time\",\n    abbr: \"ADT\",\n    offset: 0,\n    isdst: true,\n    text: \"(UTC-01:00) Azores\",\n  },\n  {\n    value: \"Cape Verde Standard Time\",\n    abbr: \"CVST\",\n    offset: -1,\n    isdst: false,\n    text: \"(UTC-01:00) Cape Verde Is.\",\n  },\n  {\n    value: \"Morocco Standard Time\",\n    abbr: \"MDT\",\n    offset: 1,\n    isdst: true,\n    text: \"(UTC) Casablanca\",\n  },\n  {\n    value: \"UTC\",\n    abbr: \"CUT\",\n    offset: 0,\n    isdst: false,\n    text: \"(UTC) Coordinated Universal Time\",\n  },\n  {\n    value: \"GMT Standard Time\",\n    abbr: \"GDT\",\n    offset: 1,\n    isdst: true,\n    text: \"(UTC) Dublin, Edinburgh, Lisbon, London\",\n  },\n  {\n    value: \"Greenwich Standard Time\",\n    abbr: \"GST\",\n    offset: 0,\n    isdst: false,\n    text: \"(UTC) Monrovia, Reykjavik\",\n  },\n  {\n    value: \"W. Europe Standard Time\",\n    abbr: \"WEDT\",\n    offset: 2,\n    isdst: true,\n    text: \"(UTC+01:00) Amsterdam, Berlin, Bern, Rome, Stockholm, Vienna\",\n  },\n  {\n    value: \"Central Europe Standard Time\",\n    abbr: \"CEDT\",\n    offset: 2,\n    isdst: true,\n    text: \"(UTC+01:00) Belgrade, Bratislava, Budapest, Ljubljana, Prague\",\n  },\n  {\n    value: \"Romance Standard Time\",\n    abbr: \"RDT\",\n    offset: 2,\n    isdst: true,\n    text: \"(UTC+01:00) Brussels, Copenhagen, Madrid, Paris\",\n  },\n  {\n    value: \"Central European Standard Time\",\n    abbr: \"CEDT\",\n    offset: 2,\n    isdst: true,\n    text: \"(UTC+01:00) Sarajevo, Skopje, Warsaw, Zagreb\",\n  },\n  {\n    value: \"W. Central Africa Standard Time\",\n    abbr: \"WCAST\",\n    offset: 1,\n    isdst: false,\n    text: \"(UTC+01:00) West Central Africa\",\n  },\n  {\n    value: \"Namibia Standard Time\",\n    abbr: \"NST\",\n    offset: 1,\n    isdst: false,\n    text: \"(UTC+01:00) Windhoek\",\n  },\n  {\n    value: \"GTB Standard Time\",\n    abbr: \"GDT\",\n    offset: 3,\n    isdst: true,\n    text: \"(UTC+02:00) Athens, Bucharest\",\n  },\n  {\n    value: \"Middle East Standard Time\",\n    abbr: \"MEDT\",\n    offset: 3,\n    isdst: true,\n    text: \"(UTC+02:00) Beirut\",\n  },\n  {\n    value: \"Egypt Standard Time\",\n    abbr: \"EST\",\n    offset: 2,\n    isdst: false,\n    text: \"(UTC+02:00) Cairo\",\n  },\n  {\n    value: \"Syria Standard Time\",\n    abbr: \"SDT\",\n    offset: 3,\n    isdst: true,\n    text: \"(UTC+02:00) Damascus\",\n  },\n  {\n    value: \"E. Europe Standard Time\",\n    abbr: \"EEDT\",\n    offset: 3,\n    isdst: true,\n    text: \"(UTC+02:00) E. Europe\",\n  },\n  {\n    value: \"South Africa Standard Time\",\n    abbr: \"SAST\",\n    offset: 2,\n    isdst: false,\n    text: \"(UTC+02:00) Harare, Pretoria\",\n  },\n  {\n    value: \"FLE Standard Time\",\n    abbr: \"FDT\",\n    offset: 3,\n    isdst: true,\n    text: \"(UTC+02:00) Helsinki, Kyiv, Riga, Sofia, Tallinn, Vilnius\",\n  },\n  {\n    value: \"Turkey Standard Time\",\n    abbr: \"TDT\",\n    offset: 3,\n    isdst: true,\n    text: \"(UTC+02:00) Istanbul\",\n  },\n  {\n    value: \"Israel Standard Time\",\n    abbr: \"JDT\",\n    offset: 3,\n    isdst: true,\n    text: \"(UTC+02:00) Jerusalem\",\n  },\n  {\n    value: \"Libya Standard Time\",\n    abbr: \"LST\",\n    offset: 2,\n    isdst: false,\n    text: \"(UTC+02:00) Tripoli\",\n  },\n  {\n    value: \"Jordan Standard Time\",\n    abbr: \"JST\",\n    offset: 3,\n    isdst: false,\n    text: \"(UTC+03:00) Amman\",\n  },\n  {\n    value: \"Arabic Standard Time\",\n    abbr: \"AST\",\n    offset: 3,\n    isdst: false,\n    text: \"(UTC+03:00) Baghdad\",\n  },\n  {\n    value: \"Kaliningrad Standard Time\",\n    abbr: \"KST\",\n    offset: 3,\n    isdst: false,\n    text: \"(UTC+03:00) Kaliningrad, Minsk\",\n  },\n  {\n    value: \"Arab Standard Time\",\n    abbr: \"AST\",\n    offset: 3,\n    isdst: false,\n    text: \"(UTC+03:00) Kuwait, Riyadh\",\n  },\n  {\n    value: \"E. Africa Standard Time\",\n    abbr: \"EAST\",\n    offset: 3,\n    isdst: false,\n    text: \"(UTC+03:00) Nairobi\",\n  },\n  {\n    value: \"Iran Standard Time\",\n    abbr: \"IDT\",\n    offset: 4.5,\n    isdst: true,\n    text: \"(UTC+03:30) Tehran\",\n  },\n  {\n    value: \"Arabian Standard Time\",\n    abbr: \"AST\",\n    offset: 4,\n    isdst: false,\n    text: \"(UTC+04:00) Abu Dhabi, Muscat\",\n  },\n  {\n    value: \"Azerbaijan Standard Time\",\n    abbr: \"ADT\",\n    offset: 5,\n    isdst: true,\n    text: \"(UTC+04:00) Baku\",\n  },\n  {\n    value: \"Russian Standard Time\",\n    abbr: \"RST\",\n    offset: 4,\n    isdst: false,\n    text: \"(UTC+04:00) Moscow, St. Petersburg, Volgograd\",\n  },\n  {\n    value: \"Mauritius Standard Time\",\n    abbr: \"MST\",\n    offset: 4,\n    isdst: false,\n    text: \"(UTC+04:00) Port Louis\",\n  },\n  {\n    value: \"Georgian Standard Time\",\n    abbr: \"GST\",\n    offset: 4,\n    isdst: false,\n    text: \"(UTC+04:00) Tbilisi\",\n  },\n  {\n    value: \"Caucasus Standard Time\",\n    abbr: \"CST\",\n    offset: 4,\n    isdst: false,\n    text: \"(UTC+04:00) Yerevan\",\n  },\n  {\n    value: \"Afghanistan Standard Time\",\n    abbr: \"AST\",\n    offset: 4.5,\n    isdst: false,\n    text: \"(UTC+04:30) Kabul\",\n  },\n  {\n    value: \"West Asia Standard Time\",\n    abbr: \"WAST\",\n    offset: 5,\n    isdst: false,\n    text: \"(UTC+05:00) Ashgabat, Tashkent\",\n  },\n  {\n    value: \"Pakistan Standard Time\",\n    abbr: \"PST\",\n    offset: 5,\n    isdst: false,\n    text: \"(UTC+05:00) Islamabad, Karachi\",\n  },\n  {\n    value: \"India Standard Time\",\n    abbr: \"IST\",\n    offset: 5.5,\n    isdst: false,\n    text: \"(UTC+05:30) Chennai, Kolkata, Mumbai, New Delhi\",\n  },\n  {\n    value: \"Sri Lanka Standard Time\",\n    abbr: \"SLST\",\n    offset: 5.5,\n    isdst: false,\n    text: \"(UTC+05:30) Sri Jayawardenepura\",\n  },\n  {\n    value: \"Nepal Standard Time\",\n    abbr: \"NST\",\n    offset: 5.75,\n    isdst: false,\n    text: \"(UTC+05:45) Kathmandu\",\n  },\n  {\n    value: \"Central Asia Standard Time\",\n    abbr: \"CAST\",\n    offset: 6,\n    isdst: false,\n    text: \"(UTC+06:00) Astana\",\n  },\n  {\n    value: \"Bangladesh Standard Time\",\n    abbr: \"BST\",\n    offset: 6,\n    isdst: false,\n    text: \"(UTC+06:00) Dhaka\",\n  },\n  {\n    value: \"Ekaterinburg Standard Time\",\n    abbr: \"EST\",\n    offset: 6,\n    isdst: false,\n    text: \"(UTC+06:00) Ekaterinburg\",\n  },\n  {\n    value: \"Myanmar Standard Time\",\n    abbr: \"MST\",\n    offset: 6.5,\n    isdst: false,\n    text: \"(UTC+06:30) Yangon (Rangoon)\",\n  },\n  {\n    value: \"SE Asia Standard Time\",\n    abbr: \"SAST\",\n    offset: 7,\n    isdst: false,\n    text: \"(UTC+07:00) Bangkok, Hanoi, Jakarta\",\n  },\n  {\n    value: \"N. Central Asia Standard Time\",\n    abbr: \"NCAST\",\n    offset: 7,\n    isdst: false,\n    text: \"(UTC+07:00) Novosibirsk\",\n  },\n  {\n    value: \"China Standard Time\",\n    abbr: \"CST\",\n    offset: 8,\n    isdst: false,\n    text: \"(UTC+08:00) Beijing, Chongqing, Hong Kong, Urumqi\",\n  },\n  {\n    value: \"North Asia Standard Time\",\n    abbr: \"NAST\",\n    offset: 8,\n    isdst: false,\n    text: \"(UTC+08:00) Krasnoyarsk\",\n  },\n  {\n    value: \"Singapore Standard Time\",\n    abbr: \"MPST\",\n    offset: 8,\n    isdst: false,\n    text: \"(UTC+08:00) Kuala Lumpur, Singapore\",\n  },\n  {\n    value: \"W. Australia Standard Time\",\n    abbr: \"WAST\",\n    offset: 8,\n    isdst: false,\n    text: \"(UTC+08:00) Perth\",\n  },\n  {\n    value: \"Taipei Standard Time\",\n    abbr: \"TST\",\n    offset: 8,\n    isdst: false,\n    text: \"(UTC+08:00) Taipei\",\n  },\n  {\n    value: \"Ulaanbaatar Standard Time\",\n    abbr: \"UST\",\n    offset: 8,\n    isdst: false,\n    text: \"(UTC+08:00) Ulaanbaatar\",\n  },\n  {\n    value: \"North Asia East Standard Time\",\n    abbr: \"NAEST\",\n    offset: 9,\n    isdst: false,\n    text: \"(UTC+09:00) Irkutsk\",\n  },\n  {\n    value: \"Tokyo Standard Time\",\n    abbr: \"TST\",\n    offset: 9,\n    isdst: false,\n    text: \"(UTC+09:00) Osaka, Sapporo, Tokyo\",\n  },\n  {\n    value: \"Korea Standard Time\",\n    abbr: \"KST\",\n    offset: 9,\n    isdst: false,\n    text: \"(UTC+09:00) Seoul\",\n  },\n  {\n    value: \"Cen. Australia Standard Time\",\n    abbr: \"CAST\",\n    offset: 9.5,\n    isdst: false,\n    text: \"(UTC+09:30) Adelaide\",\n  },\n  {\n    value: \"AUS Central Standard Time\",\n    abbr: \"ACST\",\n    offset: 9.5,\n    isdst: false,\n    text: \"(UTC+09:30) Darwin\",\n  },\n  {\n    value: \"E. Australia Standard Time\",\n    abbr: \"EAST\",\n    offset: 10,\n    isdst: false,\n    text: \"(UTC+10:00) Brisbane\",\n  },\n  {\n    value: \"AUS Eastern Standard Time\",\n    abbr: \"AEST\",\n    offset: 10,\n    isdst: false,\n    text: \"(UTC+10:00) Canberra, Melbourne, Sydney\",\n  },\n  {\n    value: \"West Pacific Standard Time\",\n    abbr: \"WPST\",\n    offset: 10,\n    isdst: false,\n    text: \"(UTC+10:00) Guam, Port Moresby\",\n  },\n  {\n    value: \"Tasmania Standard Time\",\n    abbr: \"TST\",\n    offset: 10,\n    isdst: false,\n    text: \"(UTC+10:00) Hobart\",\n  },\n  {\n    value: \"Yakutsk Standard Time\",\n    abbr: \"YST\",\n    offset: 10,\n    isdst: false,\n    text: \"(UTC+10:00) Yakutsk\",\n  },\n  {\n    value: \"Central Pacific Standard Time\",\n    abbr: \"CPST\",\n    offset: 11,\n    isdst: false,\n    text: \"(UTC+11:00) Solomon Is., New Caledonia\",\n  },\n  {\n    value: \"Vladivostok Standard Time\",\n    abbr: \"VST\",\n    offset: 11,\n    isdst: false,\n    text: \"(UTC+11:00) Vladivostok\",\n  },\n  {\n    value: \"New Zealand Standard Time\",\n    abbr: \"NZST\",\n    offset: 12,\n    isdst: false,\n    text: \"(UTC+12:00) Auckland, Wellington\",\n  },\n  {\n    value: \"UTC+12\",\n    abbr: \"U\",\n    offset: 12,\n    isdst: false,\n    text: \"(UTC+12:00) Coordinated Universal Time+12\",\n  },\n  {\n    value: \"Fiji Standard Time\",\n    abbr: \"FST\",\n    offset: 12,\n    isdst: false,\n    text: \"(UTC+12:00) Fiji\",\n  },\n  {\n    value: \"Magadan Standard Time\",\n    abbr: \"MST\",\n    offset: 12,\n    isdst: false,\n    text: \"(UTC+12:00) Magadan\",\n  },\n  {\n    value: \"Kamchatka Standard Time\",\n    abbr: \"KDT\",\n    offset: 13,\n    isdst: true,\n    text: \"(UTC+12:00) Petropavlovsk-Kamchatsky - Old\",\n  },\n  {\n    value: \"Tonga Standard Time\",\n    abbr: \"TST\",\n    offset: 13,\n    isdst: false,\n    text: \"(UTC+13:00) Nuku'alofa\",\n  },\n  {\n    value: \"Samoa Standard Time\",\n    abbr: \"SST\",\n    offset: 13,\n    isdst: false,\n    text: \"(UTC+13:00) Samoa\",\n  },\n];\n\nconst timeZones = [\n  {\n    label: \"Pacific/Midway (GMT-11:00)\",\n    tzCode: \"Pacific/Midway\",\n    name: \"(GMT-11:00) Midway\",\n    utc: \"-11:00\",\n  },\n  {\n    label: \"Pacific/Niue (GMT-11:00)\",\n    tzCode: \"Pacific/Niue\",\n    name: \"(GMT-11:00) Alofi\",\n    utc: \"-11:00\",\n  },\n  {\n    label: \"Pacific/Pago_Pago (GMT-11:00)\",\n    tzCode: \"Pacific/Pago_Pago\",\n    name: \"(GMT-11:00) Pago Pago, Tāfuna, Ta`ū, Taulaga\",\n    utc: \"-11:00\",\n  },\n  {\n    label: \"America/Adak (GMT-10:00)\",\n    tzCode: \"America/Adak\",\n    name: \"(GMT-10:00) Adak\",\n    utc: \"-10:00\",\n  },\n  {\n    label: \"Pacific/Honolulu (GMT-10:00)\",\n    tzCode: \"Pacific/Honolulu\",\n    name: \"(GMT-10:00) Honolulu, East Honolulu, Pearl City, Hilo, Kailua\",\n    utc: \"-10:00\",\n  },\n  {\n    label: \"Pacific/Rarotonga (GMT-10:00)\",\n    tzCode: \"Pacific/Rarotonga\",\n    name: \"(GMT-10:00) Avarua\",\n    utc: \"-10:00\",\n  },\n  {\n    label: \"Pacific/Tahiti (GMT-10:00)\",\n    tzCode: \"Pacific/Tahiti\",\n    name: \"(GMT-10:00) Faaa, Papeete, Punaauia, Pirae, Mahina\",\n    utc: \"-10:00\",\n  },\n  {\n    label: \"Pacific/Marquesas (GMT-09:30)\",\n    tzCode: \"Pacific/Marquesas\",\n    name: \"(GMT-09:30) Taiohae\",\n    utc: \"-09:30\",\n  },\n  {\n    label: \"America/Anchorage (GMT-09:00)\",\n    tzCode: \"America/Anchorage\",\n    name: \"(GMT-09:00) Anchorage, Fairbanks, Eagle River, Badger, Knik-Fairview\",\n    utc: \"-09:00\",\n  },\n  {\n    label: \"America/Juneau (GMT-09:00)\",\n    tzCode: \"America/Juneau\",\n    name: \"(GMT-09:00) Juneau\",\n    utc: \"-09:00\",\n  },\n  {\n    label: \"America/Metlakatla (GMT-09:00)\",\n    tzCode: \"America/Metlakatla\",\n    name: \"(GMT-09:00) Metlakatla\",\n    utc: \"-09:00\",\n  },\n  {\n    label: \"America/Nome (GMT-09:00)\",\n    tzCode: \"America/Nome\",\n    name: \"(GMT-09:00) Nome\",\n    utc: \"-09:00\",\n  },\n  {\n    label: \"America/Sitka (GMT-09:00)\",\n    tzCode: \"America/Sitka\",\n    name: \"(GMT-09:00) Sitka, Ketchikan\",\n    utc: \"-09:00\",\n  },\n  {\n    label: \"America/Yakutat (GMT-09:00)\",\n    tzCode: \"America/Yakutat\",\n    name: \"(GMT-09:00) Yakutat\",\n    utc: \"-09:00\",\n  },\n  {\n    label: \"Pacific/Gambier (GMT-09:00)\",\n    tzCode: \"Pacific/Gambier\",\n    name: \"(GMT-09:00) Gambier\",\n    utc: \"-09:00\",\n  },\n  {\n    label: \"America/Los_Angeles (GMT-08:00)\",\n    tzCode: \"America/Los_Angeles\",\n    name: \"(GMT-08:00) Los Angeles, San Diego, San Jose, San Francisco, Seattle\",\n    utc: \"-08:00\",\n  },\n  {\n    label: \"America/Tijuana (GMT-08:00)\",\n    tzCode: \"America/Tijuana\",\n    name: \"(GMT-08:00) Tijuana, Mexicali, Ensenada, Rosarito, Tecate\",\n    utc: \"-08:00\",\n  },\n  {\n    label: \"America/Vancouver (GMT-08:00)\",\n    tzCode: \"America/Vancouver\",\n    name: \"(GMT-08:00) Vancouver, Surrey, Okanagan, Victoria, Burnaby\",\n    utc: \"-08:00\",\n  },\n  {\n    label: \"Pacific/Pitcairn (GMT-08:00)\",\n    tzCode: \"Pacific/Pitcairn\",\n    name: \"(GMT-08:00) Adamstown\",\n    utc: \"-08:00\",\n  },\n  {\n    label: \"America/Boise (GMT-07:00)\",\n    tzCode: \"America/Boise\",\n    name: \"(GMT-07:00) Boise, Meridian, Nampa, Idaho Falls, Pocatello\",\n    utc: \"-07:00\",\n  },\n  {\n    label: \"America/Cambridge_Bay (GMT-07:00)\",\n    tzCode: \"America/Cambridge_Bay\",\n    name: \"(GMT-07:00) Cambridge Bay\",\n    utc: \"-07:00\",\n  },\n  {\n    label: \"America/Chihuahua (GMT-07:00)\",\n    tzCode: \"America/Chihuahua\",\n    name: \"(GMT-07:00) Chihuahua, Ciudad Delicias, Cuauhtémoc, Parral, Nuevo Casas Grandes\",\n    utc: \"-07:00\",\n  },\n  {\n    label: \"America/Creston (GMT-07:00)\",\n    tzCode: \"America/Creston\",\n    name: \"(GMT-07:00) Creston\",\n    utc: \"-07:00\",\n  },\n  {\n    label: \"America/Dawson (GMT-07:00)\",\n    tzCode: \"America/Dawson\",\n    name: \"(GMT-07:00) Dawson\",\n    utc: \"-07:00\",\n  },\n  {\n    label: \"America/Dawson_Creek (GMT-07:00)\",\n    tzCode: \"America/Dawson_Creek\",\n    name: \"(GMT-07:00) Fort St. John, Dawson Creek\",\n    utc: \"-07:00\",\n  },\n  {\n    label: \"America/Denver (GMT-07:00)\",\n    tzCode: \"America/Denver\",\n    name: \"(GMT-07:00) Denver, El Paso, Albuquerque, Colorado Springs, Aurora\",\n    utc: \"-07:00\",\n  },\n  {\n    label: \"America/Edmonton (GMT-07:00)\",\n    tzCode: \"America/Edmonton\",\n    name: \"(GMT-07:00) Calgary, Edmonton, Fort McMurray, Red Deer, Lethbridge\",\n    utc: \"-07:00\",\n  },\n  {\n    label: \"America/Fort_Nelson (GMT-07:00)\",\n    tzCode: \"America/Fort_Nelson\",\n    name: \"(GMT-07:00) Fort Nelson\",\n    utc: \"-07:00\",\n  },\n  {\n    label: \"America/Hermosillo (GMT-07:00)\",\n    tzCode: \"America/Hermosillo\",\n    name: \"(GMT-07:00) Hermosillo, Ciudad Obregón, Nogales, San Luis Río Colorado, Navojoa\",\n    utc: \"-07:00\",\n  },\n  {\n    label: \"America/Inuvik (GMT-07:00)\",\n    tzCode: \"America/Inuvik\",\n    name: \"(GMT-07:00) Inuvik\",\n    utc: \"-07:00\",\n  },\n  {\n    label: \"America/Mazatlan (GMT-07:00)\",\n    tzCode: \"America/Mazatlan\",\n    name: \"(GMT-07:00) Culiacán, Mazatlán, Tepic, Los Mochis, La Paz\",\n    utc: \"-07:00\",\n  },\n  {\n    label: \"America/Ojinaga (GMT-07:00)\",\n    tzCode: \"America/Ojinaga\",\n    name: \"(GMT-07:00) Ciudad Juárez, Manuel Ojinaga, Ojinaga\",\n    utc: \"-07:00\",\n  },\n  {\n    label: \"America/Phoenix (GMT-07:00)\",\n    tzCode: \"America/Phoenix\",\n    name: \"(GMT-07:00) Phoenix, Tucson, Mesa, Chandler, Gilbert\",\n    utc: \"-07:00\",\n  },\n  {\n    label: \"America/Whitehorse (GMT-07:00)\",\n    tzCode: \"America/Whitehorse\",\n    name: \"(GMT-07:00) Whitehorse\",\n    utc: \"-07:00\",\n  },\n  {\n    label: \"America/Yellowknife (GMT-07:00)\",\n    tzCode: \"America/Yellowknife\",\n    name: \"(GMT-07:00) Yellowknife\",\n    utc: \"-07:00\",\n  },\n  {\n    label: \"America/Bahia_Banderas (GMT-06:00)\",\n    tzCode: \"America/Bahia_Banderas\",\n    name: \"(GMT-06:00) Mezcales, San Vicente, Bucerías, Valle de Banderas\",\n    utc: \"-06:00\",\n  },\n  {\n    label: \"America/Belize (GMT-06:00)\",\n    tzCode: \"America/Belize\",\n    name: \"(GMT-06:00) Belize City, San Ignacio, Orange Walk, Belmopan, Dangriga\",\n    utc: \"-06:00\",\n  },\n  {\n    label: \"America/Chicago (GMT-06:00)\",\n    tzCode: \"America/Chicago\",\n    name: \"(GMT-06:00) Chicago, Houston, San Antonio, Dallas, Austin\",\n    utc: \"-06:00\",\n  },\n  {\n    label: \"America/Costa_Rica (GMT-06:00)\",\n    tzCode: \"America/Costa_Rica\",\n    name: \"(GMT-06:00) San José, Limón, San Francisco, Alajuela, Liberia\",\n    utc: \"-06:00\",\n  },\n  {\n    label: \"America/El_Salvador (GMT-06:00)\",\n    tzCode: \"America/El_Salvador\",\n    name: \"(GMT-06:00) San Salvador, Soyapango, Santa Ana, San Miguel, Mejicanos\",\n    utc: \"-06:00\",\n  },\n  {\n    label: \"America/Guatemala (GMT-06:00)\",\n    tzCode: \"America/Guatemala\",\n    name: \"(GMT-06:00) Guatemala City, Mixco, Villa Nueva, Petapa, San Juan Sacatepéquez\",\n    utc: \"-06:00\",\n  },\n  {\n    label: \"America/Indiana/Knox (GMT-06:00)\",\n    tzCode: \"America/Indiana/Knox\",\n    name: \"(GMT-06:00) Knox\",\n    utc: \"-06:00\",\n  },\n  {\n    label: \"America/Indiana/Tell_City (GMT-06:00)\",\n    tzCode: \"America/Indiana/Tell_City\",\n    name: \"(GMT-06:00) Tell City\",\n    utc: \"-06:00\",\n  },\n  {\n    label: \"America/Managua (GMT-06:00)\",\n    tzCode: \"America/Managua\",\n    name: \"(GMT-06:00) Managua, León, Masaya, Chinandega, Matagalpa\",\n    utc: \"-06:00\",\n  },\n  {\n    label: \"America/Matamoros (GMT-06:00)\",\n    tzCode: \"America/Matamoros\",\n    name: \"(GMT-06:00) Reynosa, Heroica Matamoros, Nuevo Laredo, Piedras Negras, Ciudad Acuña\",\n    utc: \"-06:00\",\n  },\n  {\n    label: \"America/Menominee (GMT-06:00)\",\n    tzCode: \"America/Menominee\",\n    name: \"(GMT-06:00) Menominee, Iron Mountain, Kingsford, Ironwood, Iron River\",\n    utc: \"-06:00\",\n  },\n  {\n    label: \"America/Merida (GMT-06:00)\",\n    tzCode: \"America/Merida\",\n    name: \"(GMT-06:00) Mérida, Campeche, Ciudad del Carmen, Kanasín, Valladolid\",\n    utc: \"-06:00\",\n  },\n  {\n    label: \"America/Mexico_City (GMT-06:00)\",\n    tzCode: \"America/Mexico_City\",\n    name: \"(GMT-06:00) Mexico City, Iztapalapa, Ecatepec de Morelos, Guadalajara, Puebla\",\n    utc: \"-06:00\",\n  },\n  {\n    label: \"America/Monterrey (GMT-06:00)\",\n    tzCode: \"America/Monterrey\",\n    name: \"(GMT-06:00) Monterrey, Saltillo, Guadalupe, Torreón, Victoria de Durango\",\n    utc: \"-06:00\",\n  },\n  {\n    label: \"America/North_Dakota/Beulah (GMT-06:00)\",\n    tzCode: \"America/North_Dakota/Beulah\",\n    name: \"(GMT-06:00) Beulah\",\n    utc: \"-06:00\",\n  },\n  {\n    label: \"America/North_Dakota/Center (GMT-06:00)\",\n    tzCode: \"America/North_Dakota/Center\",\n    name: \"(GMT-06:00) Center\",\n    utc: \"-06:00\",\n  },\n  {\n    label: \"America/North_Dakota/New_Salem (GMT-06:00)\",\n    tzCode: \"America/North_Dakota/New_Salem\",\n    name: \"(GMT-06:00) Mandan\",\n    utc: \"-06:00\",\n  },\n  {\n    label: \"America/Rainy_River (GMT-06:00)\",\n    tzCode: \"America/Rainy_River\",\n    name: \"(GMT-06:00) Rainy River\",\n    utc: \"-06:00\",\n  },\n  {\n    label: \"America/Rankin_Inlet (GMT-06:00)\",\n    tzCode: \"America/Rankin_Inlet\",\n    name: \"(GMT-06:00) Rankin Inlet\",\n    utc: \"-06:00\",\n  },\n  {\n    label: \"America/Regina (GMT-06:00)\",\n    tzCode: \"America/Regina\",\n    name: \"(GMT-06:00) Saskatoon, Regina, Prince Albert, Moose Jaw, North Battleford\",\n    utc: \"-06:00\",\n  },\n  {\n    label: \"America/Resolute (GMT-06:00)\",\n    tzCode: \"America/Resolute\",\n    name: \"(GMT-06:00) Resolute\",\n    utc: \"-06:00\",\n  },\n  {\n    label: \"America/Swift_Current (GMT-06:00)\",\n    tzCode: \"America/Swift_Current\",\n    name: \"(GMT-06:00) Swift Current\",\n    utc: \"-06:00\",\n  },\n  {\n    label: \"America/Tegucigalpa (GMT-06:00)\",\n    tzCode: \"America/Tegucigalpa\",\n    name: \"(GMT-06:00) Tegucigalpa, San Pedro Sula, Choloma, La Ceiba, El Progreso\",\n    utc: \"-06:00\",\n  },\n  {\n    label: \"America/Winnipeg (GMT-06:00)\",\n    tzCode: \"America/Winnipeg\",\n    name: \"(GMT-06:00) Winnipeg, Brandon, Kenora, Portage la Prairie, Thompson\",\n    utc: \"-06:00\",\n  },\n  {\n    label: \"Pacific/Easter (GMT-06:00)\",\n    tzCode: \"Pacific/Easter\",\n    name: \"(GMT-06:00) Easter\",\n    utc: \"-06:00\",\n  },\n  {\n    label: \"Pacific/Galapagos (GMT-06:00)\",\n    tzCode: \"Pacific/Galapagos\",\n    name: \"(GMT-06:00) Puerto Ayora, Puerto Baquerizo Moreno\",\n    utc: \"-06:00\",\n  },\n  {\n    label: \"America/Atikokan (GMT-05:00)\",\n    tzCode: \"America/Atikokan\",\n    name: \"(GMT-05:00) Atikokan\",\n    utc: \"-05:00\",\n  },\n  {\n    label: \"America/Bogota (GMT-05:00)\",\n    tzCode: \"America/Bogota\",\n    name: \"(GMT-05:00) Bogotá, Cali, Medellín, Barranquilla, Cartagena\",\n    utc: \"-05:00\",\n  },\n  {\n    label: \"America/Cancun (GMT-05:00)\",\n    tzCode: \"America/Cancun\",\n    name: \"(GMT-05:00) Cancún, Chetumal, Playa del Carmen, Cozumel, Felipe Carrillo Puerto\",\n    utc: \"-05:00\",\n  },\n  {\n    label: \"America/Cayman (GMT-05:00)\",\n    tzCode: \"America/Cayman\",\n    name: \"(GMT-05:00) George Town, West Bay, Bodden Town, East End, North Side\",\n    utc: \"-05:00\",\n  },\n  {\n    label: \"America/Detroit (GMT-05:00)\",\n    tzCode: \"America/Detroit\",\n    name: \"(GMT-05:00) Detroit, Grand Rapids, Warren, Sterling Heights, Ann Arbor\",\n    utc: \"-05:00\",\n  },\n  {\n    label: \"America/Eirunepe (GMT-05:00)\",\n    tzCode: \"America/Eirunepe\",\n    name: \"(GMT-05:00) Eirunepé, Benjamin Constant, Envira\",\n    utc: \"-05:00\",\n  },\n  {\n    label: \"America/Grand_Turk (GMT-05:00)\",\n    tzCode: \"America/Grand_Turk\",\n    name: \"(GMT-05:00) Cockburn Town\",\n    utc: \"-05:00\",\n  },\n  {\n    label: \"America/Guayaquil (GMT-05:00)\",\n    tzCode: \"America/Guayaquil\",\n    name: \"(GMT-05:00) Guayaquil, Quito, Cuenca, Santo Domingo de los Colorados, Machala\",\n    utc: \"-05:00\",\n  },\n  {\n    label: \"America/Havana (GMT-05:00)\",\n    tzCode: \"America/Havana\",\n    name: \"(GMT-05:00) Havana, Santiago de Cuba, Camagüey, Holguín, Guantánamo\",\n    utc: \"-05:00\",\n  },\n  {\n    label: \"America/Indiana/Indianapolis (GMT-05:00)\",\n    tzCode: \"America/Indiana/Indianapolis\",\n    name: \"(GMT-05:00) Indianapolis, Fort Wayne, South Bend, Carmel, Bloomington\",\n    utc: \"-05:00\",\n  },\n  {\n    label: \"America/Indiana/Marengo (GMT-05:00)\",\n    tzCode: \"America/Indiana/Marengo\",\n    name: \"(GMT-05:00) Marengo\",\n    utc: \"-05:00\",\n  },\n  {\n    label: \"America/Indiana/Petersburg (GMT-05:00)\",\n    tzCode: \"America/Indiana/Petersburg\",\n    name: \"(GMT-05:00) Petersburg\",\n    utc: \"-05:00\",\n  },\n  {\n    label: \"America/Indiana/Vevay (GMT-05:00)\",\n    tzCode: \"America/Indiana/Vevay\",\n    name: \"(GMT-05:00) Vevay\",\n    utc: \"-05:00\",\n  },\n  {\n    label: \"America/Indiana/Vincennes (GMT-05:00)\",\n    tzCode: \"America/Indiana/Vincennes\",\n    name: \"(GMT-05:00) Vincennes, Jasper, Washington, Huntingburg\",\n    utc: \"-05:00\",\n  },\n  {\n    label: \"America/Indiana/Winamac (GMT-05:00)\",\n    tzCode: \"America/Indiana/Winamac\",\n    name: \"(GMT-05:00) Winamac\",\n    utc: \"-05:00\",\n  },\n  {\n    label: \"America/Iqaluit (GMT-05:00)\",\n    tzCode: \"America/Iqaluit\",\n    name: \"(GMT-05:00) Iqaluit\",\n    utc: \"-05:00\",\n  },\n  {\n    label: \"America/Jamaica (GMT-05:00)\",\n    tzCode: \"America/Jamaica\",\n    name: \"(GMT-05:00) Kingston, New Kingston, Spanish Town, Portmore, Montego Bay\",\n    utc: \"-05:00\",\n  },\n  {\n    label: \"America/Kentucky/Louisville (GMT-05:00)\",\n    tzCode: \"America/Kentucky/Louisville\",\n    name: \"(GMT-05:00) Louisville, Jeffersonville, New Albany, Jeffersontown, Pleasure Ridge Park\",\n    utc: \"-05:00\",\n  },\n  {\n    label: \"America/Kentucky/Monticello (GMT-05:00)\",\n    tzCode: \"America/Kentucky/Monticello\",\n    name: \"(GMT-05:00) Monticello\",\n    utc: \"-05:00\",\n  },\n  {\n    label: \"America/Lima (GMT-05:00)\",\n    tzCode: \"America/Lima\",\n    name: \"(GMT-05:00) Lima, Arequipa, Callao, Trujillo, Chiclayo\",\n    utc: \"-05:00\",\n  },\n  {\n    label: \"America/Nassau (GMT-05:00)\",\n    tzCode: \"America/Nassau\",\n    name: \"(GMT-05:00) Nassau, Lucaya, Freeport, West End, Cooper’s Town\",\n    utc: \"-05:00\",\n  },\n  {\n    label: \"America/New_York (GMT-05:00)\",\n    tzCode: \"America/New_York\",\n    name: \"(GMT-05:00) New York City, Brooklyn, Queens, Philadelphia, Manhattan\",\n    utc: \"-05:00\",\n  },\n  {\n    label: \"America/Nipigon (GMT-05:00)\",\n    tzCode: \"America/Nipigon\",\n    name: \"(GMT-05:00) Nipigon\",\n    utc: \"-05:00\",\n  },\n  {\n    label: \"America/Panama (GMT-05:00)\",\n    tzCode: \"America/Panama\",\n    name: \"(GMT-05:00) Panamá, San Miguelito, Juan Díaz, David, Arraiján\",\n    utc: \"-05:00\",\n  },\n  {\n    label: \"America/Pangnirtung (GMT-05:00)\",\n    tzCode: \"America/Pangnirtung\",\n    name: \"(GMT-05:00) Pangnirtung\",\n    utc: \"-05:00\",\n  },\n  {\n    label: \"America/Port-au-Prince (GMT-05:00)\",\n    tzCode: \"America/Port-au-Prince\",\n    name: \"(GMT-05:00) Port-au-Prince, Carrefour, Delmas 73, Pétionville, Port-de-Paix\",\n    utc: \"-05:00\",\n  },\n  {\n    label: \"America/Rio_Branco (GMT-05:00)\",\n    tzCode: \"America/Rio_Branco\",\n    name: \"(GMT-05:00) Rio Branco, Cruzeiro do Sul, Sena Madureira, Tarauacá, Feijó\",\n    utc: \"-05:00\",\n  },\n  {\n    label: \"America/Thunder_Bay (GMT-05:00)\",\n    tzCode: \"America/Thunder_Bay\",\n    name: \"(GMT-05:00) Thunder Bay\",\n    utc: \"-05:00\",\n  },\n  {\n    label: \"America/Toronto (GMT-05:00)\",\n    tzCode: \"America/Toronto\",\n    name: \"(GMT-05:00) Toronto, Montréal, Ottawa, Mississauga, Québec\",\n    utc: \"-05:00\",\n  },\n  {\n    label: \"America/AnguillaSandy Hill (GMT-04:00)\",\n    tzCode: \"America/AnguillaSandy Hill\",\n    name: \"(GMT-04:00) The Valley, Blowing Point Village, Sandy Ground Village, The Quarter, Sandy Hill\",\n    utc: \"-04:00\",\n  },\n  {\n    label: \"America/Antigua (GMT-04:00)\",\n    tzCode: \"America/Antigua\",\n    name: \"(GMT-04:00) Saint John’s, Piggotts, Bolands, Codrington, Parham\",\n    utc: \"-04:00\",\n  },\n  {\n    label: \"America/Aruba (GMT-04:00)\",\n    tzCode: \"America/Aruba\",\n    name: \"(GMT-04:00) Oranjestad, Tanki Leendert, San Nicolas, Santa Cruz, Paradera\",\n    utc: \"-04:00\",\n  },\n  {\n    label: \"America/Asuncion (GMT-04:00)\",\n    tzCode: \"America/Asuncion\",\n    name: \"(GMT-04:00) Asunción, Ciudad del Este, San Lorenzo, Capiatá, Lambaré\",\n    utc: \"-04:00\",\n  },\n  {\n    label: \"America/Barbados (GMT-04:00)\",\n    tzCode: \"America/Barbados\",\n    name: \"(GMT-04:00) Bridgetown, Speightstown, Oistins, Bathsheba, Holetown\",\n    utc: \"-04:00\",\n  },\n  {\n    label: \"America/Blanc-Sablon (GMT-04:00)\",\n    tzCode: \"America/Blanc-Sablon\",\n    name: \"(GMT-04:00) Lévis\",\n    utc: \"-04:00\",\n  },\n  {\n    label: \"America/Boa_Vista (GMT-04:00)\",\n    tzCode: \"America/Boa_Vista\",\n    name: \"(GMT-04:00) Boa Vista\",\n    utc: \"-04:00\",\n  },\n  {\n    label: \"America/Campo_Grande (GMT-04:00)\",\n    tzCode: \"America/Campo_Grande\",\n    name: \"(GMT-04:00) Campo Grande, Dourados, Corumbá, Três Lagoas, Ponta Porã\",\n    utc: \"-04:00\",\n  },\n  {\n    label: \"America/Caracas (GMT-04:00)\",\n    tzCode: \"America/Caracas\",\n    name: \"(GMT-04:00) Caracas, Maracaibo, Maracay, Valencia, Barquisimeto\",\n    utc: \"-04:00\",\n  },\n  {\n    label: \"America/Cuiaba (GMT-04:00)\",\n    tzCode: \"America/Cuiaba\",\n    name: \"(GMT-04:00) Cuiabá, Várzea Grande, Rondonópolis, Sinop, Barra do Garças\",\n    utc: \"-04:00\",\n  },\n  {\n    label: \"America/Curacao (GMT-04:00)\",\n    tzCode: \"America/Curacao\",\n    name: \"(GMT-04:00) Willemstad, Sint Michiel Liber\",\n    utc: \"-04:00\",\n  },\n  {\n    label: \"America/Dominica (GMT-04:00)\",\n    tzCode: \"America/Dominica\",\n    name: \"(GMT-04:00) Roseau, Portsmouth, Berekua, Saint Joseph, Wesley\",\n    utc: \"-04:00\",\n  },\n  {\n    label: \"America/Glace_Bay (GMT-04:00)\",\n    tzCode: \"America/Glace_Bay\",\n    name: \"(GMT-04:00) Sydney, Glace Bay, Sydney Mines\",\n    utc: \"-04:00\",\n  },\n  {\n    label: \"America/Goose_Bay (GMT-04:00)\",\n    tzCode: \"America/Goose_Bay\",\n    name: \"(GMT-04:00) Labrador City, Happy Valley-Goose Bay\",\n    utc: \"-04:00\",\n  },\n  {\n    label: \"America/Grenada (GMT-04:00)\",\n    tzCode: \"America/Grenada\",\n    name: \"(GMT-04:00) Saint George's, Gouyave, Grenville, Victoria, Saint David’s\",\n    utc: \"-04:00\",\n  },\n  {\n    label: \"America/Guadeloupe (GMT-04:00)\",\n    tzCode: \"America/Guadeloupe\",\n    name: \"(GMT-04:00) Les Abymes, Baie-Mahault, Le Gosier, Petit-Bourg, Sainte-Anne\",\n    utc: \"-04:00\",\n  },\n  {\n    label: \"America/Guyana (GMT-04:00)\",\n    tzCode: \"America/Guyana\",\n    name: \"(GMT-04:00) Georgetown, Linden, New Amsterdam, Anna Regina, Bartica\",\n    utc: \"-04:00\",\n  },\n  {\n    label: \"America/Halifax (GMT-04:00)\",\n    tzCode: \"America/Halifax\",\n    name: \"(GMT-04:00) Halifax, Dartmouth, Charlottetown, Lower Sackville, Truro\",\n    utc: \"-04:00\",\n  },\n  {\n    label: \"America/Kralendijk (GMT-04:00)\",\n    tzCode: \"America/Kralendijk\",\n    name: \"(GMT-04:00) Kralendijk, Oranjestad, The Bottom\",\n    utc: \"-04:00\",\n  },\n  {\n    label: \"America/La_Paz (GMT-04:00)\",\n    tzCode: \"America/La_Paz\",\n    name: \"(GMT-04:00) Santa Cruz de la Sierra, Cochabamba, La Paz, Sucre, Oruro\",\n    utc: \"-04:00\",\n  },\n  {\n    label: \"America/Lower_Princes (GMT-04:00)\",\n    tzCode: \"America/Lower_Princes\",\n    name: \"(GMT-04:00) Cul de Sac, Lower Prince’s Quarter, Koolbaai, Philipsburg\",\n    utc: \"-04:00\",\n  },\n  {\n    label: \"America/Manaus (GMT-04:00)\",\n    tzCode: \"America/Manaus\",\n    name: \"(GMT-04:00) Manaus, Itacoatiara, Parintins, Manacapuru, Coari\",\n    utc: \"-04:00\",\n  },\n  {\n    label: \"America/Marigot (GMT-04:00)\",\n    tzCode: \"America/Marigot\",\n    name: \"(GMT-04:00) Marigot\",\n    utc: \"-04:00\",\n  },\n  {\n    label: \"America/Martinique (GMT-04:00)\",\n    tzCode: \"America/Martinique\",\n    name: \"(GMT-04:00) Fort-de-France, Le Lamentin, Le Robert, Sainte-Marie, Le François\",\n    utc: \"-04:00\",\n  },\n  {\n    label: \"America/Moncton (GMT-04:00)\",\n    tzCode: \"America/Moncton\",\n    name: \"(GMT-04:00) Moncton, Saint John, Fredericton, Dieppe, Miramichi\",\n    utc: \"-04:00\",\n  },\n  {\n    label: \"America/Montserrat (GMT-04:00)\",\n    tzCode: \"America/Montserrat\",\n    name: \"(GMT-04:00) Brades, Saint Peters, Plymouth\",\n    utc: \"-04:00\",\n  },\n  {\n    label: \"America/Porto_Velho (GMT-04:00)\",\n    tzCode: \"America/Porto_Velho\",\n    name: \"(GMT-04:00) Porto Velho, Ji Paraná, Vilhena, Ariquemes, Cacoal\",\n    utc: \"-04:00\",\n  },\n  {\n    label: \"America/Port_of_Spain (GMT-04:00)\",\n    tzCode: \"America/Port_of_Spain\",\n    name: \"(GMT-04:00) Chaguanas, Mon Repos, San Fernando, Port of Spain, Rio Claro\",\n    utc: \"-04:00\",\n  },\n  {\n    label: \"America/Puerto_Rico (GMT-04:00)\",\n    tzCode: \"America/Puerto_Rico\",\n    name: \"(GMT-04:00) San Juan, Bayamón, Carolina, Ponce, Caguas\",\n    utc: \"-04:00\",\n  },\n  {\n    label: \"America/Santiago (GMT-04:00)\",\n    tzCode: \"America/Santiago\",\n    name: \"(GMT-04:00) Santiago, Puente Alto, Antofagasta, Viña del Mar, Valparaíso\",\n    utc: \"-04:00\",\n  },\n  {\n    label: \"America/Santo_Domingo (GMT-04:00)\",\n    tzCode: \"America/Santo_Domingo\",\n    name: \"(GMT-04:00) Santo Domingo, Santiago de los Caballeros, Santo Domingo Oeste, Santo Domingo Este, San Pedro de Macorís\",\n    utc: \"-04:00\",\n  },\n  {\n    label: \"America/St_Barthelemy (GMT-04:00)\",\n    tzCode: \"America/St_Barthelemy\",\n    name: \"(GMT-04:00) Gustavia\",\n    utc: \"-04:00\",\n  },\n  {\n    label: \"America/St_Kitts (GMT-04:00)\",\n    tzCode: \"America/St_Kitts\",\n    name: \"(GMT-04:00) Basseterre, Fig Tree, Market Shop, Saint Paul’s, Middle Island\",\n    utc: \"-04:00\",\n  },\n  {\n    label: \"America/St_Lucia (GMT-04:00)\",\n    tzCode: \"America/St_Lucia\",\n    name: \"(GMT-04:00) Castries, Bisee, Vieux Fort, Micoud, Soufrière\",\n    utc: \"-04:00\",\n  },\n  {\n    label: \"America/St_Thomas (GMT-04:00)\",\n    tzCode: \"America/St_Thomas\",\n    name: \"(GMT-04:00) Saint Croix, Charlotte Amalie, Cruz Bay\",\n    utc: \"-04:00\",\n  },\n  {\n    label: \"America/St_Vincent (GMT-04:00)\",\n    tzCode: \"America/St_Vincent\",\n    name: \"(GMT-04:00) Kingstown, Kingstown Park, Georgetown, Barrouallie, Port Elizabeth\",\n    utc: \"-04:00\",\n  },\n  {\n    label: \"America/Thule (GMT-04:00)\",\n    tzCode: \"America/Thule\",\n    name: \"(GMT-04:00) Thule\",\n    utc: \"-04:00\",\n  },\n  {\n    label: \"America/Tortola (GMT-04:00)\",\n    tzCode: \"America/Tortola\",\n    name: \"(GMT-04:00) Road Town\",\n    utc: \"-04:00\",\n  },\n  {\n    label: \"Atlantic/Bermuda (GMT-04:00)\",\n    tzCode: \"Atlantic/Bermuda\",\n    name: \"(GMT-04:00) Hamilton\",\n    utc: \"-04:00\",\n  },\n  {\n    label: \"America/St_Johns (GMT-03:30)\",\n    tzCode: \"America/St_Johns\",\n    name: \"(GMT-03:30) St. John's, Mount Pearl, Corner Brook, Conception Bay South, Bay Roberts\",\n    utc: \"-03:30\",\n  },\n  {\n    label: \"America/Araguaina (GMT-03:00)\",\n    tzCode: \"America/Araguaina\",\n    name: \"(GMT-03:00) Palmas, Araguaína, Gurupi, Miracema do Tocantins, Porto Franco\",\n    utc: \"-03:00\",\n  },\n  {\n    label: \"America/Argentina/Buenos_Aires (GMT-03:00)\",\n    tzCode: \"America/Argentina/Buenos_Aires\",\n    name: \"(GMT-03:00) Buenos Aires, La Plata, Mar del Plata, Morón, Bahía Blanca\",\n    utc: \"-03:00\",\n  },\n  {\n    label: \"America/Argentina/Catamarca (GMT-03:00)\",\n    tzCode: \"America/Argentina/Catamarca\",\n    name: \"(GMT-03:00) San Fernando del Valle de Catamarca, Trelew, Puerto Madryn, Esquel, Rawson\",\n    utc: \"-03:00\",\n  },\n  {\n    label: \"America/Argentina/Cordoba (GMT-03:00)\",\n    tzCode: \"America/Argentina/Cordoba\",\n    name: \"(GMT-03:00) Córdoba, Rosario, Santa Fe, Resistencia, Santiago del Estero\",\n    utc: \"-03:00\",\n  },\n  {\n    label: \"America/Argentina/Jujuy (GMT-03:00)\",\n    tzCode: \"America/Argentina/Jujuy\",\n    name: \"(GMT-03:00) San Salvador de Jujuy, San Pedro de Jujuy, Libertador General San Martín, Palpalá, La Quiaca\",\n    utc: \"-03:00\",\n  },\n  {\n    label: \"America/Argentina/La_Rioja (GMT-03:00)\",\n    tzCode: \"America/Argentina/La_Rioja\",\n    name: \"(GMT-03:00) La Rioja, Chilecito, Arauco, Chamical\",\n    utc: \"-03:00\",\n  },\n  {\n    label: \"America/Argentina/Mendoza (GMT-03:00)\",\n    tzCode: \"America/Argentina/Mendoza\",\n    name: \"(GMT-03:00) Mendoza, San Rafael, San Martín\",\n    utc: \"-03:00\",\n  },\n  {\n    label: \"America/Argentina/Rio_Gallegos (GMT-03:00)\",\n    tzCode: \"America/Argentina/Rio_Gallegos\",\n    name: \"(GMT-03:00) Comodoro Rivadavia, Río Gallegos, Caleta Olivia, Pico Truncado, Puerto Deseado\",\n    utc: \"-03:00\",\n  },\n  {\n    label: \"America/Argentina/Salta (GMT-03:00)\",\n    tzCode: \"America/Argentina/Salta\",\n    name: \"(GMT-03:00) Salta, Neuquén, Santa Rosa, San Carlos de Bariloche, Cipolletti\",\n    utc: \"-03:00\",\n  },\n  {\n    label: \"America/Argentina/San_Juan (GMT-03:00)\",\n    tzCode: \"America/Argentina/San_Juan\",\n    name: \"(GMT-03:00) San Juan, Chimbas, Santa Lucía, Pocito, Caucete\",\n    utc: \"-03:00\",\n  },\n  {\n    label: \"America/Argentina/San_Luis (GMT-03:00)\",\n    tzCode: \"America/Argentina/San_Luis\",\n    name: \"(GMT-03:00) San Luis, Villa Mercedes, La Punta, Merlo, Justo Daract\",\n    utc: \"-03:00\",\n  },\n  {\n    label: \"America/Argentina/Tucuman (GMT-03:00)\",\n    tzCode: \"America/Argentina/Tucuman\",\n    name: \"(GMT-03:00) San Miguel de Tucumán, Yerba Buena, Tafí Viejo, Alderetes, Aguilares\",\n    utc: \"-03:00\",\n  },\n  {\n    label: \"America/Argentina/Ushuaia (GMT-03:00)\",\n    tzCode: \"America/Argentina/Ushuaia\",\n    name: \"(GMT-03:00) Ushuaia, Río Grande\",\n    utc: \"-03:00\",\n  },\n  {\n    label: \"America/Bahia (GMT-03:00)\",\n    tzCode: \"America/Bahia\",\n    name: \"(GMT-03:00) Salvador, Feira de Santana, Vitória da Conquista, Itabuna, Camaçari\",\n    utc: \"-03:00\",\n  },\n  {\n    label: \"America/Belem (GMT-03:00)\",\n    tzCode: \"America/Belem\",\n    name: \"(GMT-03:00) Belém, Ananindeua, Macapá, Parauapebas, Marabá\",\n    utc: \"-03:00\",\n  },\n  {\n    label: \"America/Cayenne (GMT-03:00)\",\n    tzCode: \"America/Cayenne\",\n    name: \"(GMT-03:00) Cayenne, Matoury, Saint-Laurent-du-Maroni, Kourou, Rémire-Montjoly\",\n    utc: \"-03:00\",\n  },\n  {\n    label: \"America/Fortaleza (GMT-03:00)\",\n    tzCode: \"America/Fortaleza\",\n    name: \"(GMT-03:00) Fortaleza, São Luís, Natal, Teresina, João Pessoa\",\n    utc: \"-03:00\",\n  },\n  {\n    label: \"America/Godthab (GMT-03:00)\",\n    tzCode: \"America/Godthab\",\n    name: \"(GMT-03:00) Nuuk, Sisimiut, Ilulissat, Qaqortoq, Aasiaat\",\n    utc: \"-03:00\",\n  },\n  {\n    label: \"America/Maceio (GMT-03:00)\",\n    tzCode: \"America/Maceio\",\n    name: \"(GMT-03:00) Maceió, Aracaju, Arapiraca, Nossa Senhora do Socorro, São Cristóvão\",\n    utc: \"-03:00\",\n  },\n  {\n    label: \"America/Miquelon (GMT-03:00)\",\n    tzCode: \"America/Miquelon\",\n    name: \"(GMT-03:00) Saint-Pierre, Miquelon\",\n    utc: \"-03:00\",\n  },\n  {\n    label: \"America/Montevideo (GMT-03:00)\",\n    tzCode: \"America/Montevideo\",\n    name: \"(GMT-03:00) Montevideo, Salto, Paysandú, Las Piedras, Rivera\",\n    utc: \"-03:00\",\n  },\n  {\n    label: \"America/Paramaribo (GMT-03:00)\",\n    tzCode: \"America/Paramaribo\",\n    name: \"(GMT-03:00) Paramaribo, Lelydorp, Brokopondo, Nieuw Nickerie, Moengo\",\n    utc: \"-03:00\",\n  },\n  {\n    label: \"America/Punta_Arenas (GMT-03:00)\",\n    tzCode: \"America/Punta_Arenas\",\n    name: \"(GMT-03:00) Punta Arenas, Puerto Natales\",\n    utc: \"-03:00\",\n  },\n  {\n    label: \"America/Recife (GMT-03:00)\",\n    tzCode: \"America/Recife\",\n    name: \"(GMT-03:00) Recife, Jaboatão, Jaboatão dos Guararapes, Olinda, Paulista\",\n    utc: \"-03:00\",\n  },\n  {\n    label: \"America/Santarem (GMT-03:00)\",\n    tzCode: \"America/Santarem\",\n    name: \"(GMT-03:00) Santarém, Altamira, Itaituba, Oriximiná, Alenquer\",\n    utc: \"-03:00\",\n  },\n  {\n    label: \"America/Sao_Paulo (GMT-03:00)\",\n    tzCode: \"America/Sao_Paulo\",\n    name: \"(GMT-03:00) São Paulo, Rio de Janeiro, Belo Horizonte, Brasília, Curitiba\",\n    utc: \"-03:00\",\n  },\n  {\n    label: \"Antarctica/Palmer (GMT-03:00)\",\n    tzCode: \"Antarctica/Palmer\",\n    name: \"(GMT-03:00) Palmer\",\n    utc: \"-03:00\",\n  },\n  {\n    label: \"Antarctica/Rothera (GMT-03:00)\",\n    tzCode: \"Antarctica/Rothera\",\n    name: \"(GMT-03:00) Rothera\",\n    utc: \"-03:00\",\n  },\n  {\n    label: \"Atlantic/Stanley (GMT-03:00)\",\n    tzCode: \"Atlantic/Stanley\",\n    name: \"(GMT-03:00) Stanley\",\n    utc: \"-03:00\",\n  },\n  {\n    label: \"America/Noronha (GMT-02:00)\",\n    tzCode: \"America/Noronha\",\n    name: \"(GMT-02:00) Itamaracá\",\n    utc: \"-02:00\",\n  },\n  {\n    label: \"Atlantic/South_Georgia (GMT-02:00)\",\n    tzCode: \"Atlantic/South_Georgia\",\n    name: \"(GMT-02:00) Grytviken\",\n    utc: \"-02:00\",\n  },\n  {\n    label: \"America/Scoresbysund (GMT-01:00)\",\n    tzCode: \"America/Scoresbysund\",\n    name: \"(GMT-01:00) Scoresbysund\",\n    utc: \"-01:00\",\n  },\n  {\n    label: \"Atlantic/Azores (GMT-01:00)\",\n    tzCode: \"Atlantic/Azores\",\n    name: \"(GMT-01:00) Ponta Delgada, Lagoa, Angra do Heroísmo, Rosto de Cão, Rabo de Peixe\",\n    utc: \"-01:00\",\n  },\n  {\n    label: \"Atlantic/Cape_Verde (GMT-01:00)\",\n    tzCode: \"Atlantic/Cape_Verde\",\n    name: \"(GMT-01:00) Praia, Mindelo, Santa Maria, Cova Figueira, Santa Cruz\",\n    utc: \"-01:00\",\n  },\n  {\n    label: \"Africa/Abidjan (GMT+00:00)\",\n    tzCode: \"Africa/Abidjan\",\n    name: \"(GMT+00:00) Abidjan, Abobo, Bouaké, Daloa, San-Pédro\",\n    utc: \"+00:00\",\n  },\n  {\n    label: \"Africa/Accra (GMT+00:00)\",\n    tzCode: \"Africa/Accra\",\n    name: \"(GMT+00:00) Accra, Kumasi, Tamale, Takoradi, Atsiaman\",\n    utc: \"+00:00\",\n  },\n  {\n    label: \"Africa/Bamako (GMT+00:00)\",\n    tzCode: \"Africa/Bamako\",\n    name: \"(GMT+00:00) Bamako, Sikasso, Mopti, Koutiala, Ségou\",\n    utc: \"+00:00\",\n  },\n  {\n    label: \"Africa/Banjul (GMT+00:00)\",\n    tzCode: \"Africa/Banjul\",\n    name: \"(GMT+00:00) Serekunda, Brikama, Bakau, Banjul, Farafenni\",\n    utc: \"+00:00\",\n  },\n  {\n    label: \"Africa/Bissau (GMT+00:00)\",\n    tzCode: \"Africa/Bissau\",\n    name: \"(GMT+00:00) Bissau, Bafatá, Gabú, Bissorã, Bolama\",\n    utc: \"+00:00\",\n  },\n  {\n    label: \"Africa/Casablanca (GMT+00:00)\",\n    tzCode: \"Africa/Casablanca\",\n    name: \"(GMT+00:00) Casablanca, Rabat, Fès, Sale, Marrakesh\",\n    utc: \"+00:00\",\n  },\n  {\n    label: \"Africa/Conakry (GMT+00:00)\",\n    tzCode: \"Africa/Conakry\",\n    name: \"(GMT+00:00) Camayenne, Conakry, Nzérékoré, Kindia, Kankan\",\n    utc: \"+00:00\",\n  },\n  {\n    label: \"Africa/Dakar (GMT+00:00)\",\n    tzCode: \"Africa/Dakar\",\n    name: \"(GMT+00:00) Dakar, Pikine, Touba, Thiès, Thiès Nones\",\n    utc: \"+00:00\",\n  },\n  {\n    label: \"Africa/El_Aaiun (GMT+00:00)\",\n    tzCode: \"Africa/El_Aaiun\",\n    name: \"(GMT+00:00) Laayoune, Dakhla, Laayoune Plage\",\n    utc: \"+00:00\",\n  },\n  {\n    label: \"Africa/Freetown (GMT+00:00)\",\n    tzCode: \"Africa/Freetown\",\n    name: \"(GMT+00:00) Freetown, Bo, Kenema, Koidu, Makeni\",\n    utc: \"+00:00\",\n  },\n  {\n    label: \"Africa/Lome (GMT+00:00)\",\n    tzCode: \"Africa/Lome\",\n    name: \"(GMT+00:00) Lomé, Sokodé, Kara, Atakpamé, Kpalimé\",\n    utc: \"+00:00\",\n  },\n  {\n    label: \"Africa/Monrovia (GMT+00:00)\",\n    tzCode: \"Africa/Monrovia\",\n    name: \"(GMT+00:00) Monrovia, Gbarnga, Kakata, Bensonville, Harper\",\n    utc: \"+00:00\",\n  },\n  {\n    label: \"Africa/Nouakchott (GMT+00:00)\",\n    tzCode: \"Africa/Nouakchott\",\n    name: \"(GMT+00:00) Nouakchott, Nouadhibou, Néma, Kaédi, Rosso\",\n    utc: \"+00:00\",\n  },\n  {\n    label: \"Africa/Ouagadougou (GMT+00:00)\",\n    tzCode: \"Africa/Ouagadougou\",\n    name: \"(GMT+00:00) Ouagadougou, Bobo-Dioulasso, Koudougou, Ouahigouya, Banfora\",\n    utc: \"+00:00\",\n  },\n  {\n    label: \"Africa/Sao_Tome (GMT+00:00)\",\n    tzCode: \"Africa/Sao_Tome\",\n    name: \"(GMT+00:00) São Tomé, Santo António\",\n    utc: \"+00:00\",\n  },\n  {\n    label: \"America/Danmarkshavn (GMT+00:00)\",\n    tzCode: \"America/Danmarkshavn\",\n    name: \"(GMT+00:00) Danmarkshavn\",\n    utc: \"+00:00\",\n  },\n  {\n    label: \"Antarctica/Troll (GMT+00:00)\",\n    tzCode: \"Antarctica/Troll\",\n    name: \"(GMT+00:00) Troll\",\n    utc: \"+00:00\",\n  },\n  {\n    label: \"Atlantic/Canary (GMT+00:00)\",\n    tzCode: \"Atlantic/Canary\",\n    name: \"(GMT+00:00) Las Palmas de Gran Canaria, Santa Cruz de Tenerife, La Laguna, Telde, Arona\",\n    utc: \"+00:00\",\n  },\n  {\n    label: \"Atlantic/Faroe (GMT+00:00)\",\n    tzCode: \"Atlantic/Faroe\",\n    name: \"(GMT+00:00) Tórshavn, Klaksvík, Fuglafjørður, Tvøroyri, Miðvágur\",\n    utc: \"+00:00\",\n  },\n  {\n    label: \"Atlantic/Madeira (GMT+00:00)\",\n    tzCode: \"Atlantic/Madeira\",\n    name: \"(GMT+00:00) Funchal, Câmara de Lobos, São Martinho, Caniço, Machico\",\n    utc: \"+00:00\",\n  },\n  {\n    label: \"Atlantic/Reykjavik (GMT+00:00)\",\n    tzCode: \"Atlantic/Reykjavik\",\n    name: \"(GMT+00:00) Reykjavík, Kópavogur, Hafnarfjörður, Akureyri, Garðabær\",\n    utc: \"+00:00\",\n  },\n  {\n    label: \"Atlantic/St_Helena (GMT+00:00)\",\n    tzCode: \"Atlantic/St_Helena\",\n    name: \"(GMT+00:00) Jamestown, Georgetown, Edinburgh of the Seven Seas\",\n    utc: \"+00:00\",\n  },\n  {\n    label: \"Europe/Dublin (GMT+00:00)\",\n    tzCode: \"Europe/Dublin\",\n    name: \"(GMT+00:00) Dublin, Cork, Luimneach, Gaillimh, Tallaght\",\n    utc: \"+00:00\",\n  },\n  {\n    label: \"Europe/Guernsey (GMT+00:00)\",\n    tzCode: \"Europe/Guernsey\",\n    name: \"(GMT+00:00) Saint Peter Port, St Martin, Saint Sampson, St Anne, Saint Saviour\",\n    utc: \"+00:00\",\n  },\n  {\n    label: \"Europe/Isle_of_Man (GMT+00:00)\",\n    tzCode: \"Europe/Isle_of_Man\",\n    name: \"(GMT+00:00) Douglas, Ramsey, Peel, Port Erin, Castletown\",\n    utc: \"+00:00\",\n  },\n  {\n    label: \"Europe/Jersey (GMT+00:00)\",\n    tzCode: \"Europe/Jersey\",\n    name: \"(GMT+00:00) Saint Helier, Le Hocq\",\n    utc: \"+00:00\",\n  },\n  {\n    label: \"Europe/Lisbon (GMT+00:00)\",\n    tzCode: \"Europe/Lisbon\",\n    name: \"(GMT+00:00) Lisbon, Porto, Amadora, Braga, Setúbal\",\n    utc: \"+00:00\",\n  },\n  {\n    label: \"Europe/London (GMT+00:00)\",\n    tzCode: \"Europe/London\",\n    name: \"(GMT+00:00) London, Birmingham, Liverpool, Sheffield, Bristol\",\n    utc: \"+00:00\",\n  },\n  {\n    label: \"Africa/Algiers (GMT+01:00)\",\n    tzCode: \"Africa/Algiers\",\n    name: \"(GMT+01:00) Algiers, Boumerdas, Oran, Tébessa, Constantine\",\n    utc: \"+01:00\",\n  },\n  {\n    label: \"Africa/Bangui (GMT+01:00)\",\n    tzCode: \"Africa/Bangui\",\n    name: \"(GMT+01:00) Bangui, Bimbo, Mbaïki, Berbérati, Kaga Bandoro\",\n    utc: \"+01:00\",\n  },\n  {\n    label: \"Africa/Brazzaville (GMT+01:00)\",\n    tzCode: \"Africa/Brazzaville\",\n    name: \"(GMT+01:00) Brazzaville, Pointe-Noire, Dolisie, Kayes, Owando\",\n    utc: \"+01:00\",\n  },\n  {\n    label: \"Africa/Ceuta (GMT+01:00)\",\n    tzCode: \"Africa/Ceuta\",\n    name: \"(GMT+01:00) Ceuta, Melilla\",\n    utc: \"+01:00\",\n  },\n  {\n    label: \"Africa/Douala (GMT+01:00)\",\n    tzCode: \"Africa/Douala\",\n    name: \"(GMT+01:00) Douala, Yaoundé, Garoua, Kousséri, Bamenda\",\n    utc: \"+01:00\",\n  },\n  {\n    label: \"Africa/Kinshasa (GMT+01:00)\",\n    tzCode: \"Africa/Kinshasa\",\n    name: \"(GMT+01:00) Kinshasa, Masina, Kikwit, Mbandaka, Matadi\",\n    utc: \"+01:00\",\n  },\n  {\n    label: \"Africa/Lagos (GMT+01:00)\",\n    tzCode: \"Africa/Lagos\",\n    name: \"(GMT+01:00) Lagos, Kano, Ibadan, Kaduna, Port Harcourt\",\n    utc: \"+01:00\",\n  },\n  {\n    label: \"Africa/Libreville (GMT+01:00)\",\n    tzCode: \"Africa/Libreville\",\n    name: \"(GMT+01:00) Libreville, Port-Gentil, Franceville, Oyem, Moanda\",\n    utc: \"+01:00\",\n  },\n  {\n    label: \"Africa/Luanda (GMT+01:00)\",\n    tzCode: \"Africa/Luanda\",\n    name: \"(GMT+01:00) Luanda, N’dalatando, Huambo, Lobito, Benguela\",\n    utc: \"+01:00\",\n  },\n  {\n    label: \"Africa/Malabo (GMT+01:00)\",\n    tzCode: \"Africa/Malabo\",\n    name: \"(GMT+01:00) Bata, Malabo, Ebebiyin, Aconibe, Añisoc\",\n    utc: \"+01:00\",\n  },\n  {\n    label: \"Africa/Ndjamena (GMT+01:00)\",\n    tzCode: \"Africa/Ndjamena\",\n    name: \"(GMT+01:00) N'Djamena, Moundou, Sarh, Abéché, Kelo\",\n    utc: \"+01:00\",\n  },\n  {\n    label: \"Africa/Niamey (GMT+01:00)\",\n    tzCode: \"Africa/Niamey\",\n    name: \"(GMT+01:00) Niamey, Zinder, Maradi, Agadez, Alaghsas\",\n    utc: \"+01:00\",\n  },\n  {\n    label: \"Africa/Porto-Novo (GMT+01:00)\",\n    tzCode: \"Africa/Porto-Novo\",\n    name: \"(GMT+01:00) Cotonou, Abomey-Calavi, Djougou, Porto-Novo, Parakou\",\n    utc: \"+01:00\",\n  },\n  {\n    label: \"Africa/Tunis (GMT+01:00)\",\n    tzCode: \"Africa/Tunis\",\n    name: \"(GMT+01:00) Tunis, Sfax, Sousse, Kairouan, Bizerte\",\n    utc: \"+01:00\",\n  },\n  {\n    label: \"Africa/Windhoek (GMT+01:00)\",\n    tzCode: \"Africa/Windhoek\",\n    name: \"(GMT+01:00) Windhoek, Rundu, Walvis Bay, Oshakati, Swakopmund\",\n    utc: \"+01:00\",\n  },\n  {\n    label: \"Arctic/Longyearbyen (GMT+01:00)\",\n    tzCode: \"Arctic/Longyearbyen\",\n    name: \"(GMT+01:00) Longyearbyen, Olonkinbyen\",\n    utc: \"+01:00\",\n  },\n  {\n    label: \"Europe/Amsterdam (GMT+01:00)\",\n    tzCode: \"Europe/Amsterdam\",\n    name: \"(GMT+01:00) Amsterdam, Rotterdam, The Hague, Utrecht, Eindhoven\",\n    utc: \"+01:00\",\n  },\n  {\n    label: \"Europe/Andorra (GMT+01:00)\",\n    tzCode: \"Europe/Andorra\",\n    name: \"(GMT+01:00) Andorra la Vella, les Escaldes, Encamp, Sant Julià de Lòria, la Massana\",\n    utc: \"+01:00\",\n  },\n  {\n    label: \"Europe/Belgrade (GMT+01:00)\",\n    tzCode: \"Europe/Belgrade\",\n    name: \"(GMT+01:00) Belgrade, Pristina, Niš, Novi Sad, Prizren\",\n    utc: \"+01:00\",\n  },\n  {\n    label: \"Europe/Berlin (GMT+01:00)\",\n    tzCode: \"Europe/Berlin\",\n    name: \"(GMT+01:00) Berlin, Hamburg, Munich, Köln, Frankfurt am Main\",\n    utc: \"+01:00\",\n  },\n  {\n    label: \"Europe/Bratislava (GMT+01:00)\",\n    tzCode: \"Europe/Bratislava\",\n    name: \"(GMT+01:00) Bratislava, Košice, Prešov, Nitra, Žilina\",\n    utc: \"+01:00\",\n  },\n  {\n    label: \"Europe/Brussels (GMT+01:00)\",\n    tzCode: \"Europe/Brussels\",\n    name: \"(GMT+01:00) Brussels, Antwerpen, Gent, Charleroi, Liège\",\n    utc: \"+01:00\",\n  },\n  {\n    label: \"Europe/Budapest (GMT+01:00)\",\n    tzCode: \"Europe/Budapest\",\n    name: \"(GMT+01:00) Budapest, Debrecen, Miskolc, Szeged, Pécs\",\n    utc: \"+01:00\",\n  },\n  {\n    label: \"Europe/Copenhagen (GMT+01:00)\",\n    tzCode: \"Europe/Copenhagen\",\n    name: \"(GMT+01:00) Copenhagen, Århus, Odense, Aalborg, Frederiksberg\",\n    utc: \"+01:00\",\n  },\n  {\n    label: \"Europe/Gibraltar (GMT+01:00)\",\n    tzCode: \"Europe/Gibraltar\",\n    name: \"(GMT+01:00) Gibraltar\",\n    utc: \"+01:00\",\n  },\n  {\n    label: \"Europe/Ljubljana (GMT+01:00)\",\n    tzCode: \"Europe/Ljubljana\",\n    name: \"(GMT+01:00) Ljubljana, Maribor, Celje, Kranj, Velenje\",\n    utc: \"+01:00\",\n  },\n  {\n    label: \"Europe/Luxembourg (GMT+01:00)\",\n    tzCode: \"Europe/Luxembourg\",\n    name: \"(GMT+01:00) Luxembourg, Esch-sur-Alzette, Dudelange, Schifflange, Bettembourg\",\n    utc: \"+01:00\",\n  },\n  {\n    label: \"Europe/Madrid (GMT+01:00)\",\n    tzCode: \"Europe/Madrid\",\n    name: \"(GMT+01:00) Madrid, Barcelona, Valencia, Sevilla, Zaragoza\",\n    utc: \"+01:00\",\n  },\n  {\n    label: \"Europe/Malta (GMT+01:00)\",\n    tzCode: \"Europe/Malta\",\n    name: \"(GMT+01:00) Birkirkara, Qormi, Mosta, Żabbar, San Pawl il-Baħar\",\n    utc: \"+01:00\",\n  },\n  {\n    label: \"Europe/Monaco (GMT+01:00)\",\n    tzCode: \"Europe/Monaco\",\n    name: \"(GMT+01:00) Monaco, Monte-Carlo, La Condamine\",\n    utc: \"+01:00\",\n  },\n  {\n    label: \"Europe/Oslo (GMT+01:00)\",\n    tzCode: \"Europe/Oslo\",\n    name: \"(GMT+01:00) Oslo, Bergen, Trondheim, Stavanger, Drammen\",\n    utc: \"+01:00\",\n  },\n  {\n    label: \"Europe/Paris (GMT+01:00)\",\n    tzCode: \"Europe/Paris\",\n    name: \"(GMT+01:00) Paris, Marseille, Lyon, Toulouse, Nice\",\n    utc: \"+01:00\",\n  },\n  {\n    label: \"Europe/Podgorica (GMT+01:00)\",\n    tzCode: \"Europe/Podgorica\",\n    name: \"(GMT+01:00) Podgorica, Nikšić, Herceg Novi, Pljevlja, Budva\",\n    utc: \"+01:00\",\n  },\n  {\n    label: \"Europe/Prague (GMT+01:00)\",\n    tzCode: \"Europe/Prague\",\n    name: \"(GMT+01:00) Prague, Brno, Ostrava, Pilsen, Olomouc\",\n    utc: \"+01:00\",\n  },\n  {\n    label: \"Europe/Rome (GMT+01:00)\",\n    tzCode: \"Europe/Rome\",\n    name: \"(GMT+01:00) Rome, Milan, Naples, Turin, Palermo\",\n    utc: \"+01:00\",\n  },\n  {\n    label: \"Europe/San_Marino (GMT+01:00)\",\n    tzCode: \"Europe/San_Marino\",\n    name: \"(GMT+01:00) Serravalle, Borgo Maggiore, San Marino, Domagnano, Fiorentino\",\n    utc: \"+01:00\",\n  },\n  {\n    label: \"Europe/Sarajevo (GMT+01:00)\",\n    tzCode: \"Europe/Sarajevo\",\n    name: \"(GMT+01:00) Sarajevo, Banja Luka, Zenica, Tuzla, Mostar\",\n    utc: \"+01:00\",\n  },\n  {\n    label: \"Europe/Skopje (GMT+01:00)\",\n    tzCode: \"Europe/Skopje\",\n    name: \"(GMT+01:00) Skopje, Bitola, Kumanovo, Prilep, Tetovo\",\n    utc: \"+01:00\",\n  },\n  {\n    label: \"Europe/Stockholm (GMT+01:00)\",\n    tzCode: \"Europe/Stockholm\",\n    name: \"(GMT+01:00) Stockholm, Göteborg, Malmö, Uppsala, Sollentuna\",\n    utc: \"+01:00\",\n  },\n  {\n    label: \"Europe/Tirane (GMT+01:00)\",\n    tzCode: \"Europe/Tirane\",\n    name: \"(GMT+01:00) Tirana, Durrës, Elbasan, Vlorë, Shkodër\",\n    utc: \"+01:00\",\n  },\n  {\n    label: \"Europe/Vaduz (GMT+01:00)\",\n    tzCode: \"Europe/Vaduz\",\n    name: \"(GMT+01:00) Schaan, Vaduz, Triesen, Balzers, Eschen\",\n    utc: \"+01:00\",\n  },\n  {\n    label: \"Europe/Vatican (GMT+01:00)\",\n    tzCode: \"Europe/Vatican\",\n    name: \"(GMT+01:00) Vatican City\",\n    utc: \"+01:00\",\n  },\n  {\n    label: \"Europe/Vienna (GMT+01:00)\",\n    tzCode: \"Europe/Vienna\",\n    name: \"(GMT+01:00) Vienna, Graz, Linz, Favoriten, Donaustadt\",\n    utc: \"+01:00\",\n  },\n  {\n    label: \"Europe/Warsaw (GMT+01:00)\",\n    tzCode: \"Europe/Warsaw\",\n    name: \"(GMT+01:00) Warsaw, Łódź, Kraków, Wrocław, Poznań\",\n    utc: \"+01:00\",\n  },\n  {\n    label: \"Europe/Zagreb (GMT+01:00)\",\n    tzCode: \"Europe/Zagreb\",\n    name: \"(GMT+01:00) Zagreb, Split, Rijeka, Osijek, Zadar\",\n    utc: \"+01:00\",\n  },\n  {\n    label: \"Europe/Zurich (GMT+01:00)\",\n    tzCode: \"Europe/Zurich\",\n    name: \"(GMT+01:00) Zürich, Genève, Basel, Lausanne, Bern\",\n    utc: \"+01:00\",\n  },\n  {\n    label: \"Africa/Blantyre (GMT+02:00)\",\n    tzCode: \"Africa/Blantyre\",\n    name: \"(GMT+02:00) Lilongwe, Blantyre, Mzuzu, Zomba, Kasungu\",\n    utc: \"+02:00\",\n  },\n  {\n    label: \"Africa/Bujumbura (GMT+02:00)\",\n    tzCode: \"Africa/Bujumbura\",\n    name: \"(GMT+02:00) Bujumbura, Muyinga, Gitega, Ruyigi, Ngozi\",\n    utc: \"+02:00\",\n  },\n  {\n    label: \"Africa/Cairo (GMT+02:00)\",\n    tzCode: \"Africa/Cairo\",\n    name: \"(GMT+02:00) Cairo, Alexandria, Giza, Port Said, Suez\",\n    utc: \"+02:00\",\n  },\n  {\n    label: \"Africa/Gaborone (GMT+02:00)\",\n    tzCode: \"Africa/Gaborone\",\n    name: \"(GMT+02:00) Gaborone, Francistown, Molepolole, Selebi-Phikwe, Maun\",\n    utc: \"+02:00\",\n  },\n  {\n    label: \"Africa/Harare (GMT+02:00)\",\n    tzCode: \"Africa/Harare\",\n    name: \"(GMT+02:00) Harare, Bulawayo, Chitungwiza, Mutare, Gweru\",\n    utc: \"+02:00\",\n  },\n  {\n    label: \"Africa/Johannesburg (GMT+02:00)\",\n    tzCode: \"Africa/Johannesburg\",\n    name: \"(GMT+02:00) Cape Town, Durban, Johannesburg, Soweto, Pretoria\",\n    utc: \"+02:00\",\n  },\n  {\n    label: \"Africa/Juba (GMT+02:00)\",\n    tzCode: \"Africa/Juba\",\n    name: \"(GMT+02:00) Juba, Winejok, Malakal, Wau, Kuacjok\",\n    utc: \"+02:00\",\n  },\n  {\n    label: \"Africa/Khartoum (GMT+02:00)\",\n    tzCode: \"Africa/Khartoum\",\n    name: \"(GMT+02:00) Khartoum, Omdurman, Nyala, Port Sudan, Kassala\",\n    utc: \"+02:00\",\n  },\n  {\n    label: \"Africa/Kigali (GMT+02:00)\",\n    tzCode: \"Africa/Kigali\",\n    name: \"(GMT+02:00) Kigali, Butare, Gitarama, Musanze, Gisenyi\",\n    utc: \"+02:00\",\n  },\n  {\n    label: \"Africa/Lubumbashi (GMT+02:00)\",\n    tzCode: \"Africa/Lubumbashi\",\n    name: \"(GMT+02:00) Lubumbashi, Mbuji-Mayi, Kisangani, Kananga, Likasi\",\n    utc: \"+02:00\",\n  },\n  {\n    label: \"Africa/Lusaka (GMT+02:00)\",\n    tzCode: \"Africa/Lusaka\",\n    name: \"(GMT+02:00) Lusaka, Kitwe, Ndola, Kabwe, Chingola\",\n    utc: \"+02:00\",\n  },\n  {\n    label: \"Africa/Maputo (GMT+02:00)\",\n    tzCode: \"Africa/Maputo\",\n    name: \"(GMT+02:00) Maputo, Matola, Beira, Nampula, Chimoio\",\n    utc: \"+02:00\",\n  },\n  {\n    label: \"Africa/Maseru (GMT+02:00)\",\n    tzCode: \"Africa/Maseru\",\n    name: \"(GMT+02:00) Maseru, Mafeteng, Leribe, Maputsoe, Mohale’s Hoek\",\n    utc: \"+02:00\",\n  },\n  {\n    label: \"Africa/Mbabane (GMT+02:00)\",\n    tzCode: \"Africa/Mbabane\",\n    name: \"(GMT+02:00) Manzini, Mbabane, Big Bend, Malkerns, Nhlangano\",\n    utc: \"+02:00\",\n  },\n  {\n    label: \"Africa/Tripoli (GMT+02:00)\",\n    tzCode: \"Africa/Tripoli\",\n    name: \"(GMT+02:00) Tripoli, Benghazi, Mişrātah, Tarhuna, Al Khums\",\n    utc: \"+02:00\",\n  },\n  {\n    label: \"Asia/Amman (GMT+02:00)\",\n    tzCode: \"Asia/Amman\",\n    name: \"(GMT+02:00) Amman, Zarqa, Irbid, Russeifa, Wādī as Sīr\",\n    utc: \"+02:00\",\n  },\n  {\n    label: \"Asia/Beirut (GMT+02:00)\",\n    tzCode: \"Asia/Beirut\",\n    name: \"(GMT+02:00) Beirut, Ra’s Bayrūt, Tripoli, Sidon, Tyre\",\n    utc: \"+02:00\",\n  },\n  {\n    label: \"Asia/Damascus (GMT+02:00)\",\n    tzCode: \"Asia/Damascus\",\n    name: \"(GMT+02:00) Aleppo, Damascus, Homs, Ḩamāh, Latakia\",\n    utc: \"+02:00\",\n  },\n  {\n    label: \"Asia/Famagusta (GMT+02:00)\",\n    tzCode: \"Asia/Famagusta\",\n    name: \"(GMT+02:00) Famagusta, Kyrenia, Protaras, Paralímni, Lápithos\",\n    utc: \"+02:00\",\n  },\n  {\n    label: \"Asia/Gaza (GMT+02:00)\",\n    tzCode: \"Asia/Gaza\",\n    name: \"(GMT+02:00) Gaza, Khān Yūnis, Jabālyā, Rafaḩ, Dayr al Balaḩ\",\n    utc: \"+02:00\",\n  },\n  {\n    label: \"Asia/Hebron (GMT+02:00)\",\n    tzCode: \"Asia/Hebron\",\n    name: \"(GMT+02:00) East Jerusalem, Hebron, Nablus, Battir, Ţūlkarm\",\n    utc: \"+02:00\",\n  },\n  {\n    label: \"Asia/Jerusalem (GMT+02:00)\",\n    tzCode: \"Asia/Jerusalem\",\n    name: \"(GMT+02:00) Jerusalem, Tel Aviv, West Jerusalem, Haifa, Ashdod\",\n    utc: \"+02:00\",\n  },\n  {\n    label: \"Asia/Nicosia (GMT+02:00)\",\n    tzCode: \"Asia/Nicosia\",\n    name: \"(GMT+02:00) Nicosia, Limassol, Larnaca, Stróvolos, Paphos\",\n    utc: \"+02:00\",\n  },\n  {\n    label: \"Europe/Athens (GMT+02:00)\",\n    tzCode: \"Europe/Athens\",\n    name: \"(GMT+02:00) Athens, Thessaloníki, Pátra, Piraeus, Lárisa\",\n    utc: \"+02:00\",\n  },\n  {\n    label: \"Europe/Bucharest (GMT+02:00)\",\n    tzCode: \"Europe/Bucharest\",\n    name: \"(GMT+02:00) Bucharest, Sector 3, Sector 6, Sector 2, Iaşi\",\n    utc: \"+02:00\",\n  },\n  {\n    label: \"Europe/Chisinau (GMT+02:00)\",\n    tzCode: \"Europe/Chisinau\",\n    name: \"(GMT+02:00) Chisinau, Tiraspol, Bălţi, Bender, Rîbniţa\",\n    utc: \"+02:00\",\n  },\n  {\n    label: \"Europe/Helsinki (GMT+02:00)\",\n    tzCode: \"Europe/Helsinki\",\n    name: \"(GMT+02:00) Helsinki, Espoo, Tampere, Vantaa, Turku\",\n    utc: \"+02:00\",\n  },\n  {\n    label: \"Europe/Kaliningrad (GMT+02:00)\",\n    tzCode: \"Europe/Kaliningrad\",\n    name: \"(GMT+02:00) Kaliningrad, Chernyakhovsk, Sovetsk, Baltiysk, Gusev\",\n    utc: \"+02:00\",\n  },\n  {\n    label: \"Europe/Kiev (GMT+02:00)\",\n    tzCode: \"Europe/Kiev\",\n    name: \"(GMT+02:00) Kyiv, Kharkiv, Donetsk, Odessa, Dnipro\",\n    utc: \"+02:00\",\n  },\n  {\n    label: \"Europe/Mariehamn (GMT+02:00)\",\n    tzCode: \"Europe/Mariehamn\",\n    name: \"(GMT+02:00) Mariehamn\",\n    utc: \"+02:00\",\n  },\n  {\n    label: \"Europe/Riga (GMT+02:00)\",\n    tzCode: \"Europe/Riga\",\n    name: \"(GMT+02:00) Riga, Daugavpils, Liepāja, Jelgava, Jūrmala\",\n    utc: \"+02:00\",\n  },\n  {\n    label: \"Europe/Sofia (GMT+02:00)\",\n    tzCode: \"Europe/Sofia\",\n    name: \"(GMT+02:00) Sofia, Plovdiv, Varna, Burgas, Ruse\",\n    utc: \"+02:00\",\n  },\n  {\n    label: \"Europe/Tallinn (GMT+02:00)\",\n    tzCode: \"Europe/Tallinn\",\n    name: \"(GMT+02:00) Tallinn, Tartu, Narva, Kohtla-Järve, Pärnu\",\n    utc: \"+02:00\",\n  },\n  {\n    label: \"Europe/Uzhgorod (GMT+02:00)\",\n    tzCode: \"Europe/Uzhgorod\",\n    name: \"(GMT+02:00) Uzhgorod, Mukachevo, Khust, Berehove, Tyachiv\",\n    utc: \"+02:00\",\n  },\n  {\n    label: \"Europe/Vilnius (GMT+02:00)\",\n    tzCode: \"Europe/Vilnius\",\n    name: \"(GMT+02:00) Vilnius, Kaunas, Klaipėda, Šiauliai, Panevėžys\",\n    utc: \"+02:00\",\n  },\n  {\n    label: \"Europe/Zaporozhye (GMT+02:00)\",\n    tzCode: \"Europe/Zaporozhye\",\n    name: \"(GMT+02:00) Luhansk, Sevastopol, Sievierodonetsk, Alchevsk, Lysychansk\",\n    utc: \"+02:00\",\n  },\n  {\n    label: \"Africa/Addis_Ababa (GMT+03:00)\",\n    tzCode: \"Africa/Addis_Ababa\",\n    name: \"(GMT+03:00) Addis Ababa, Dire Dawa, Mek'ele, Nazrēt, Bahir Dar\",\n    utc: \"+03:00\",\n  },\n  {\n    label: \"Africa/Asmara (GMT+03:00)\",\n    tzCode: \"Africa/Asmara\",\n    name: \"(GMT+03:00) Asmara, Keren, Massawa, Assab, Mendefera\",\n    utc: \"+03:00\",\n  },\n  {\n    label: \"Africa/Dar_es_Salaam (GMT+03:00)\",\n    tzCode: \"Africa/Dar_es_Salaam\",\n    name: \"(GMT+03:00) Dar es Salaam, Mwanza, Zanzibar, Arusha, Mbeya\",\n    utc: \"+03:00\",\n  },\n  {\n    label: \"Africa/Djibouti (GMT+03:00)\",\n    tzCode: \"Africa/Djibouti\",\n    name: \"(GMT+03:00) Djibouti, 'Ali Sabieh, Tadjourah, Obock, Dikhil\",\n    utc: \"+03:00\",\n  },\n  {\n    label: \"Africa/Kampala (GMT+03:00)\",\n    tzCode: \"Africa/Kampala\",\n    name: \"(GMT+03:00) Kampala, Gulu, Lira, Mbarara, Jinja\",\n    utc: \"+03:00\",\n  },\n  {\n    label: \"Africa/Mogadishu (GMT+03:00)\",\n    tzCode: \"Africa/Mogadishu\",\n    name: \"(GMT+03:00) Mogadishu, Hargeysa, Berbera, Kismayo, Marka\",\n    utc: \"+03:00\",\n  },\n  {\n    label: \"Africa/Nairobi (GMT+03:00)\",\n    tzCode: \"Africa/Nairobi\",\n    name: \"(GMT+03:00) Nairobi, Mombasa, Nakuru, Eldoret, Kisumu\",\n    utc: \"+03:00\",\n  },\n  {\n    label: \"Antarctica/Syowa (GMT+03:00)\",\n    tzCode: \"Antarctica/Syowa\",\n    name: \"(GMT+03:00) Syowa\",\n    utc: \"+03:00\",\n  },\n  {\n    label: \"Asia/Aden (GMT+03:00)\",\n    tzCode: \"Asia/Aden\",\n    name: \"(GMT+03:00) Sanaa, Al Ḩudaydah, Taiz, Aden, Mukalla\",\n    utc: \"+03:00\",\n  },\n  {\n    label: \"Asia/Baghdad (GMT+03:00)\",\n    tzCode: \"Asia/Baghdad\",\n    name: \"(GMT+03:00) Baghdad, Basrah, Al Mawşil al Jadīdah, Al Başrah al Qadīmah, Mosul\",\n    utc: \"+03:00\",\n  },\n  {\n    label: \"Asia/Bahrain (GMT+03:00)\",\n    tzCode: \"Asia/Bahrain\",\n    name: \"(GMT+03:00) Manama, Al Muharraq, Ar Rifā‘, Dār Kulayb, Madīnat Ḩamad\",\n    utc: \"+03:00\",\n  },\n  {\n    label: \"Asia/Kuwait (GMT+03:00)\",\n    tzCode: \"Asia/Kuwait\",\n    name: \"(GMT+03:00) Al Aḩmadī, Ḩawallī, As Sālimīyah, Şabāḩ as Sālim, Al Farwānīyah\",\n    utc: \"+03:00\",\n  },\n  {\n    label: \"Asia/Qatar (GMT+03:00)\",\n    tzCode: \"Asia/Qatar\",\n    name: \"(GMT+03:00) Doha, Ar Rayyān, Umm Şalāl Muḩammad, Al Wakrah, Al Khawr\",\n    utc: \"+03:00\",\n  },\n  {\n    label: \"Asia/Riyadh (GMT+03:00)\",\n    tzCode: \"Asia/Riyadh\",\n    name: \"(GMT+03:00) Riyadh, Jeddah, Mecca, Medina, Sulţānah\",\n    utc: \"+03:00\",\n  },\n  {\n    label: \"Europe/Istanbul (GMT+03:00)\",\n    tzCode: \"Europe/Istanbul\",\n    name: \"(GMT+03:00) Istanbul, Ankara, İzmir, Bursa, Adana\",\n    utc: \"+03:00\",\n  },\n  {\n    label: \"Europe/Kirov (GMT+03:00)\",\n    tzCode: \"Europe/Kirov\",\n    name: \"(GMT+03:00) Kirov, Kirovo-Chepetsk, Vyatskiye Polyany, Slobodskoy, Kotel’nich\",\n    utc: \"+03:00\",\n  },\n  {\n    label: \"Europe/Minsk (GMT+03:00)\",\n    tzCode: \"Europe/Minsk\",\n    name: \"(GMT+03:00) Minsk, Homyel', Mahilyow, Vitebsk, Hrodna\",\n    utc: \"+03:00\",\n  },\n  {\n    label: \"Europe/Moscow (GMT+03:00)\",\n    tzCode: \"Europe/Moscow\",\n    name: \"(GMT+03:00) Moscow, Saint Petersburg, Nizhniy Novgorod, Kazan, Rostov-na-Donu\",\n    utc: \"+03:00\",\n  },\n  {\n    label: \"Europe/Simferopol (GMT+03:00)\",\n    tzCode: \"Europe/Simferopol\",\n    name: \"(GMT+03:00) Simferopol, Kerch, Yevpatoriya, Yalta, Feodosiya\",\n    utc: \"+03:00\",\n  },\n  {\n    label: \"Europe/Volgograd (GMT+03:00)\",\n    tzCode: \"Europe/Volgograd\",\n    name: \"(GMT+03:00) Volgograd, Volzhskiy, Kamyshin, Mikhaylovka, Uryupinsk\",\n    utc: \"+03:00\",\n  },\n  {\n    label: \"Indian/Antananarivo (GMT+03:00)\",\n    tzCode: \"Indian/Antananarivo\",\n    name: \"(GMT+03:00) Antananarivo, Toamasina, Antsirabe, Fianarantsoa, Mahajanga\",\n    utc: \"+03:00\",\n  },\n  {\n    label: \"Indian/Comoro (GMT+03:00)\",\n    tzCode: \"Indian/Comoro\",\n    name: \"(GMT+03:00) Moroni, Moutsamoudou, Fomboni, Domoni, Tsimbeo\",\n    utc: \"+03:00\",\n  },\n  {\n    label: \"Indian/Mayotte (GMT+03:00)\",\n    tzCode: \"Indian/Mayotte\",\n    name: \"(GMT+03:00) Mamoudzou, Koungou, Dzaoudzi, Dembeni, Sada\",\n    utc: \"+03:00\",\n  },\n  {\n    label: \"Asia/Tehran (GMT+03:30)\",\n    tzCode: \"Asia/Tehran\",\n    name: \"(GMT+03:30) Tehran, Mashhad, Isfahan, Karaj, Tabriz\",\n    utc: \"+03:30\",\n  },\n  {\n    label: \"Asia/Baku (GMT+04:00)\",\n    tzCode: \"Asia/Baku\",\n    name: \"(GMT+04:00) Baku, Ganja, Sumqayıt, Lankaran, Yevlakh\",\n    utc: \"+04:00\",\n  },\n  {\n    label: \"Asia/Dubai (GMT+04:00)\",\n    tzCode: \"Asia/Dubai\",\n    name: \"(GMT+04:00) Dubai, Sharjah, Abu Dhabi, Ajman City, Ras Al Khaimah City\",\n    utc: \"+04:00\",\n  },\n  {\n    label: \"Asia/Muscat (GMT+04:00)\",\n    tzCode: \"Asia/Muscat\",\n    name: \"(GMT+04:00) Muscat, Seeb, Şalālah, Bawshar, Sohar\",\n    utc: \"+04:00\",\n  },\n  {\n    label: \"Asia/Tbilisi (GMT+04:00)\",\n    tzCode: \"Asia/Tbilisi\",\n    name: \"(GMT+04:00) Tbilisi, Kutaisi, Batumi, Sokhumi, Zugdidi\",\n    utc: \"+04:00\",\n  },\n  {\n    label: \"Asia/Yerevan (GMT+04:00)\",\n    tzCode: \"Asia/Yerevan\",\n    name: \"(GMT+04:00) Yerevan, Gyumri, Vanadzor, Vagharshapat, Hrazdan\",\n    utc: \"+04:00\",\n  },\n  {\n    label: \"Europe/Astrakhan (GMT+04:00)\",\n    tzCode: \"Europe/Astrakhan\",\n    name: \"(GMT+04:00) Astrakhan, Akhtubinsk, Znamensk, Kharabali, Kamyzyak\",\n    utc: \"+04:00\",\n  },\n  {\n    label: \"Europe/Samara (GMT+04:00)\",\n    tzCode: \"Europe/Samara\",\n    name: \"(GMT+04:00) Samara, Togliatti-on-the-Volga, Izhevsk, Syzran’, Novokuybyshevsk\",\n    utc: \"+04:00\",\n  },\n  {\n    label: \"Europe/Saratov (GMT+04:00)\",\n    tzCode: \"Europe/Saratov\",\n    name: \"(GMT+04:00) Saratov, Balakovo, Engel’s, Balashov, Vol’sk\",\n    utc: \"+04:00\",\n  },\n  {\n    label: \"Europe/Ulyanovsk (GMT+04:00)\",\n    tzCode: \"Europe/Ulyanovsk\",\n    name: \"(GMT+04:00) Ulyanovsk, Dimitrovgrad, Inza, Barysh, Novoul’yanovsk\",\n    utc: \"+04:00\",\n  },\n  {\n    label: \"Indian/Mahe (GMT+04:00)\",\n    tzCode: \"Indian/Mahe\",\n    name: \"(GMT+04:00) Victoria, Anse Boileau, Bel Ombre, Beau Vallon, Cascade\",\n    utc: \"+04:00\",\n  },\n  {\n    label: \"Indian/Mauritius (GMT+04:00)\",\n    tzCode: \"Indian/Mauritius\",\n    name: \"(GMT+04:00) Port Louis, Beau Bassin-Rose Hill, Vacoas, Curepipe, Quatre Bornes\",\n    utc: \"+04:00\",\n  },\n  {\n    label: \"Indian/Reunion (GMT+04:00)\",\n    tzCode: \"Indian/Reunion\",\n    name: \"(GMT+04:00) Saint-Denis, Saint-Paul, Saint-Pierre, Le Tampon, Saint-André\",\n    utc: \"+04:00\",\n  },\n  {\n    label: \"Asia/Kabul (GMT+04:30)\",\n    tzCode: \"Asia/Kabul\",\n    name: \"(GMT+04:30) Kabul, Kandahār, Mazār-e Sharīf, Herāt, Jalālābād\",\n    utc: \"+04:30\",\n  },\n  {\n    label: \"Antarctica/Mawson (GMT+05:00)\",\n    tzCode: \"Antarctica/Mawson\",\n    name: \"(GMT+05:00) Mawson\",\n    utc: \"+05:00\",\n  },\n  {\n    label: \"Asia/Aqtau (GMT+05:00)\",\n    tzCode: \"Asia/Aqtau\",\n    name: \"(GMT+05:00) Shevchenko, Zhanaozen, Beyneu, Shetpe, Yeraliyev\",\n    utc: \"+05:00\",\n  },\n  {\n    label: \"Asia/Aqtobe (GMT+05:00)\",\n    tzCode: \"Asia/Aqtobe\",\n    name: \"(GMT+05:00) Aktobe, Kandyagash, Shalqar, Khromtau, Embi\",\n    utc: \"+05:00\",\n  },\n  {\n    label: \"Asia/Ashgabat (GMT+05:00)\",\n    tzCode: \"Asia/Ashgabat\",\n    name: \"(GMT+05:00) Ashgabat, Türkmenabat, Daşoguz, Mary, Balkanabat\",\n    utc: \"+05:00\",\n  },\n  {\n    label: \"Asia/Atyrau (GMT+05:00)\",\n    tzCode: \"Asia/Atyrau\",\n    name: \"(GMT+05:00) Atyrau, Qulsary, Shalkar, Balykshi, Maqat\",\n    utc: \"+05:00\",\n  },\n  {\n    label: \"Asia/Dushanbe (GMT+05:00)\",\n    tzCode: \"Asia/Dushanbe\",\n    name: \"(GMT+05:00) Dushanbe, Khujand, Kŭlob, Bokhtar, Istaravshan\",\n    utc: \"+05:00\",\n  },\n  {\n    label: \"Asia/Karachi (GMT+05:00)\",\n    tzCode: \"Asia/Karachi\",\n    name: \"(GMT+05:00) Karachi, Lahore, Faisalabad, Rawalpindi, Multan\",\n    utc: \"+05:00\",\n  },\n  {\n    label: \"Asia/Oral (GMT+05:00)\",\n    tzCode: \"Asia/Oral\",\n    name: \"(GMT+05:00) Oral, Aqsay, Zhänibek, Tasqala, Zhumysker\",\n    utc: \"+05:00\",\n  },\n  {\n    label: \"Asia/Qyzylorda (GMT+05:00)\",\n    tzCode: \"Asia/Qyzylorda\",\n    name: \"(GMT+05:00) Kyzylorda, Baikonur, Novokazalinsk, Aral, Chiili\",\n    utc: \"+05:00\",\n  },\n  {\n    label: \"Asia/Samarkand (GMT+05:00)\",\n    tzCode: \"Asia/Samarkand\",\n    name: \"(GMT+05:00) Samarkand, Bukhara, Nukus, Qarshi, Jizzax\",\n    utc: \"+05:00\",\n  },\n  {\n    label: \"Asia/Tashkent (GMT+05:00)\",\n    tzCode: \"Asia/Tashkent\",\n    name: \"(GMT+05:00) Tashkent, Namangan, Andijon, Qo‘qon, Chirchiq\",\n    utc: \"+05:00\",\n  },\n  {\n    label: \"Asia/Yekaterinburg (GMT+05:00)\",\n    tzCode: \"Asia/Yekaterinburg\",\n    name: \"(GMT+05:00) Yekaterinburg, Chelyabinsk, Ufa, Perm, Orenburg\",\n    utc: \"+05:00\",\n  },\n  {\n    label: \"Indian/Kerguelen (GMT+05:00)\",\n    tzCode: \"Indian/Kerguelen\",\n    name: \"(GMT+05:00) Port-aux-Français\",\n    utc: \"+05:00\",\n  },\n  {\n    label: \"Indian/Maldives (GMT+05:00)\",\n    tzCode: \"Indian/Maldives\",\n    name: \"(GMT+05:00) Male, Fuvahmulah, Hithadhoo, Kulhudhuffushi, Thinadhoo\",\n    utc: \"+05:00\",\n  },\n  {\n    label: \"Asia/Colombo (GMT+05:30)\",\n    tzCode: \"Asia/Colombo\",\n    name: \"(GMT+05:30) Colombo, Dehiwala-Mount Lavinia, Moratuwa, Jaffna, Negombo\",\n    utc: \"+05:30\",\n  },\n  {\n    label: \"Asia/Kolkata (GMT+05:30)\",\n    tzCode: \"Asia/Kolkata\",\n    name: \"(GMT+05:30) Mumbai, Delhi, Bengaluru, Kolkata, Chennai\",\n    utc: \"+05:30\",\n  },\n  {\n    label: \"Asia/Kathmandu (GMT+05:45)\",\n    tzCode: \"Asia/Kathmandu\",\n    name: \"(GMT+05:45) Kathmandu, Pokhara, Pātan, Biratnagar, Birgañj\",\n    utc: \"+05:45\",\n  },\n  {\n    label: \"Antarctica/Vostok (GMT+06:00)\",\n    tzCode: \"Antarctica/Vostok\",\n    name: \"(GMT+06:00) Vostok\",\n    utc: \"+06:00\",\n  },\n  {\n    label: \"Asia/Almaty (GMT+06:00)\",\n    tzCode: \"Asia/Almaty\",\n    name: \"(GMT+06:00) Almaty, Karagandy, Shymkent, Taraz, Nur-Sultan\",\n    utc: \"+06:00\",\n  },\n  {\n    label: \"Asia/Bishkek (GMT+06:00)\",\n    tzCode: \"Asia/Bishkek\",\n    name: \"(GMT+06:00) Bishkek, Osh, Jalal-Abad, Karakol, Tokmok\",\n    utc: \"+06:00\",\n  },\n  {\n    label: \"Asia/Dhaka (GMT+06:00)\",\n    tzCode: \"Asia/Dhaka\",\n    name: \"(GMT+06:00) Dhaka, Chattogram, Khulna, Rājshāhi, Comilla\",\n    utc: \"+06:00\",\n  },\n  {\n    label: \"Asia/Omsk (GMT+06:00)\",\n    tzCode: \"Asia/Omsk\",\n    name: \"(GMT+06:00) Omsk, Tara, Kalachinsk, Znamenskoye, Tavricheskoye\",\n    utc: \"+06:00\",\n  },\n  {\n    label: \"Asia/Qostanay (GMT+06:00)\",\n    tzCode: \"Asia/Qostanay\",\n    name: \"(GMT+06:00) Kostanay, Rudnyy, Dzhetygara, Arkalyk, Lisakovsk\",\n    utc: \"+06:00\",\n  },\n  {\n    label: \"Asia/Thimphu (GMT+06:00)\",\n    tzCode: \"Asia/Thimphu\",\n    name: \"(GMT+06:00) himphu, Punākha, Tsirang, Phuntsholing, Pemagatshel\",\n    utc: \"+06:00\",\n  },\n  {\n    label: \"Asia/Urumqi (GMT+06:00)\",\n    tzCode: \"Asia/Urumqi\",\n    name: \"(GMT+06:00) Zhongshan, Ürümqi, Zhanjiang, Shihezi, Huocheng\",\n    utc: \"+06:00\",\n  },\n  {\n    label: \"Indian/Chagos (GMT+06:00)\",\n    tzCode: \"Indian/Chagos\",\n    name: \"(GMT+06:00) British Indian Ocean Territory\",\n    utc: \"+06:00\",\n  },\n  {\n    label: \"Asia/Yangon (GMT+06:30)\",\n    tzCode: \"Asia/Yangon\",\n    name: \"(GMT+06:30) Yangon, Mandalay, Nay Pyi Taw, Mawlamyine, Kyain Seikgyi Township\",\n    utc: \"+06:30\",\n  },\n  {\n    label: \"Indian/Cocos (GMT+06:30)\",\n    tzCode: \"Indian/Cocos\",\n    name: \"(GMT+06:30) West Island\",\n    utc: \"+06:30\",\n  },\n  {\n    label: \"Antarctica/Davis (GMT+07:00)\",\n    tzCode: \"Antarctica/Davis\",\n    name: \"(GMT+07:00) Davis\",\n    utc: \"+07:00\",\n  },\n  {\n    label: \"Asia/Bangkok (GMT+07:00)\",\n    tzCode: \"Asia/Bangkok\",\n    name: \"(GMT+07:00) Bangkok, Hanoi, Haiphong, Samut Prakan, Mueang Nonthaburi\",\n    utc: \"+07:00\",\n  },\n  {\n    label: \"Asia/Barnaul (GMT+07:00)\",\n    tzCode: \"Asia/Barnaul\",\n    name: \"(GMT+07:00) Barnaul, Biysk, Rubtsovsk, Novoaltaysk, Gorno-Altaysk\",\n    utc: \"+07:00\",\n  },\n  {\n    label: \"Asia/Hovd (GMT+07:00)\",\n    tzCode: \"Asia/Hovd\",\n    name: \"(GMT+07:00) Khovd, Ölgii, Ulaangom, Uliastay, Altai\",\n    utc: \"+07:00\",\n  },\n  {\n    label: \"Asia/Ho_Chi_Minh (GMT+07:00)\",\n    tzCode: \"Asia/Ho_Chi_Minh\",\n    name: \"(GMT+07:00) Ho Chi Minh City, Da Nang, Biên Hòa, Nha Trang, Cần Thơ\",\n    utc: \"+07:00\",\n  },\n  {\n    label: \"Asia/Jakarta (GMT+07:00)\",\n    tzCode: \"Asia/Jakarta\",\n    name: \"(GMT+07:00) Jakarta, Surabaya, Medan, Bandung, Bekasi\",\n    utc: \"+07:00\",\n  },\n  {\n    label: \"Asia/Krasnoyarsk (GMT+07:00)\",\n    tzCode: \"Asia/Krasnoyarsk\",\n    name: \"(GMT+07:00) Krasnoyarsk, Abakan, Norilsk, Achinsk, Kyzyl\",\n    utc: \"+07:00\",\n  },\n  {\n    label: \"Asia/Novokuznetsk (GMT+07:00)\",\n    tzCode: \"Asia/Novokuznetsk\",\n    name: \"(GMT+07:00) Novokuznetsk, Kemerovo, Prokop’yevsk, Leninsk-Kuznetsky, Kiselëvsk\",\n    utc: \"+07:00\",\n  },\n  {\n    label: \"Asia/Novosibirsk (GMT+07:00)\",\n    tzCode: \"Asia/Novosibirsk\",\n    name: \"(GMT+07:00) Novosibirsk, Berdsk, Iskitim, Akademgorodok, Kuybyshev\",\n    utc: \"+07:00\",\n  },\n  {\n    label: \"Asia/Phnom_Penh (GMT+07:00)\",\n    tzCode: \"Asia/Phnom_Penh\",\n    name: \"(GMT+07:00) Phnom Penh, Takeo, Sihanoukville, Battambang, Siem Reap\",\n    utc: \"+07:00\",\n  },\n  {\n    label: \"Asia/Pontianak (GMT+07:00)\",\n    tzCode: \"Asia/Pontianak\",\n    name: \"(GMT+07:00) Pontianak, Tanjung Pinang, Palangkaraya, Singkawang, Sampit\",\n    utc: \"+07:00\",\n  },\n  {\n    label: \"Asia/Tomsk (GMT+07:00)\",\n    tzCode: \"Asia/Tomsk\",\n    name: \"(GMT+07:00) Tomsk, Seversk, Strezhevoy, Kolpashevo, Asino\",\n    utc: \"+07:00\",\n  },\n  {\n    label: \"Asia/Vientiane (GMT+07:00)\",\n    tzCode: \"Asia/Vientiane\",\n    name: \"(GMT+07:00) Vientiane, Pakse, Thakhèk, Savannakhet, Luang Prabang\",\n    utc: \"+07:00\",\n  },\n  {\n    label: \"Indian/Christmas (GMT+07:00)\",\n    tzCode: \"Indian/Christmas\",\n    name: \"(GMT+07:00) Flying Fish Cove\",\n    utc: \"+07:00\",\n  },\n  {\n    label: \"Asia/Brunei (GMT+08:00)\",\n    tzCode: \"Asia/Brunei\",\n    name: \"(GMT+08:00) Bandar Seri Begawan, Kuala Belait, Seria, Tutong, Bangar\",\n    utc: \"+08:00\",\n  },\n  {\n    label: \"Asia/Choibalsan (GMT+08:00)\",\n    tzCode: \"Asia/Choibalsan\",\n    name: \"(GMT+08:00) Baruun-Urt, Choibalsan\",\n    utc: \"+08:00\",\n  },\n  {\n    label: \"Asia/Hong_Kong (GMT+08:00)\",\n    tzCode: \"Asia/Hong_Kong\",\n    name: \"(GMT+08:00) Hong Kong, Kowloon, Tsuen Wan, Yuen Long Kau Hui, Tung Chung\",\n    utc: \"+08:00\",\n  },\n  {\n    label: \"Asia/Irkutsk (GMT+08:00)\",\n    tzCode: \"Asia/Irkutsk\",\n    name: \"(GMT+08:00) Irkutsk, Ulan-Ude, Bratsk, Angarsk, Ust’-Ilimsk\",\n    utc: \"+08:00\",\n  },\n  {\n    label: \"Asia/Kuala_Lumpur (GMT+08:00)\",\n    tzCode: \"Asia/Kuala_Lumpur\",\n    name: \"(GMT+08:00) Kota Bharu, Kuala Lumpur, Klang, Kampung Baru Subang, Johor Bahru\",\n    utc: \"+08:00\",\n  },\n  {\n    label: \"Asia/Kuching (GMT+08:00)\",\n    tzCode: \"Asia/Kuching\",\n    name: \"(GMT+08:00) Kuching, Kota Kinabalu, Sandakan, Tawau, Miri\",\n    utc: \"+08:00\",\n  },\n  {\n    label: \"Asia/Macau (GMT+08:00)\",\n    tzCode: \"Asia/Macau\",\n    name: \"(GMT+08:00) Macau\",\n    utc: \"+08:00\",\n  },\n  {\n    label: \"Asia/Makassar (GMT+08:00)\",\n    tzCode: \"Asia/Makassar\",\n    name: \"(GMT+08:00) Makassar, Denpasar, City of Balikpapan, Banjarmasin, Manado\",\n    utc: \"+08:00\",\n  },\n  {\n    label: \"Asia/Manila (GMT+08:00)\",\n    tzCode: \"Asia/Manila\",\n    name: \"(GMT+08:00) Quezon City, Manila, Caloocan City, Budta, Davao\",\n    utc: \"+08:00\",\n  },\n  {\n    label: \"Asia/Shanghai (GMT+08:00)\",\n    tzCode: \"Asia/Shanghai\",\n    name: \"(GMT+08:00) Shanghai, Beijing, Tianjin, Guangzhou, Shenzhen\",\n    utc: \"+08:00\",\n  },\n  {\n    label: \"Asia/Singapore (GMT+08:00)\",\n    tzCode: \"Asia/Singapore\",\n    name: \"(GMT+08:00) Singapore, Woodlands\",\n    utc: \"+08:00\",\n  },\n  {\n    label: \"Asia/Taipei (GMT+08:00)\",\n    tzCode: \"Asia/Taipei\",\n    name: \"(GMT+08:00) Taipei, Kaohsiung, Taichung, Tainan, Banqiao\",\n    utc: \"+08:00\",\n  },\n  {\n    label: \"Asia/Ulaanbaatar (GMT+08:00)\",\n    tzCode: \"Asia/Ulaanbaatar\",\n    name: \"(GMT+08:00) Ulan Bator, Erdenet, Darhan, Hovd, Mörön\",\n    utc: \"+08:00\",\n  },\n  {\n    label: \"Australia/Perth (GMT+08:00)\",\n    tzCode: \"Australia/Perth\",\n    name: \"(GMT+08:00) Perth, Rockingham, Mandurah, Bunbury, Albany\",\n    utc: \"+08:00\",\n  },\n  {\n    label: \"Australia/Eucla (GMT+08:45)\",\n    tzCode: \"Australia/Eucla\",\n    name: \"(GMT+08:45) Eucla\",\n    utc: \"+08:45\",\n  },\n  {\n    label: \"Asia/Chita (GMT+09:00)\",\n    tzCode: \"Asia/Chita\",\n    name: \"(GMT+09:00) Chita, Krasnokamensk, Borzya, Petrovsk-Zabaykal’skiy, Aginskoye\",\n    utc: \"+09:00\",\n  },\n  {\n    label: \"Asia/Dili (GMT+09:00)\",\n    tzCode: \"Asia/Dili\",\n    name: \"(GMT+09:00) Dili, Maliana, Suai, Likisá, Aileu\",\n    utc: \"+09:00\",\n  },\n  {\n    label: \"Asia/Jayapura (GMT+09:00)\",\n    tzCode: \"Asia/Jayapura\",\n    name: \"(GMT+09:00) Ambon, Jayapura, Sorong, Ternate, Abepura\",\n    utc: \"+09:00\",\n  },\n  {\n    label: \"Asia/Khandyga (GMT+09:00)\",\n    tzCode: \"Asia/Khandyga\",\n    name: \"(GMT+09:00) Khandyga\",\n    utc: \"+09:00\",\n  },\n  {\n    label: \"Asia/Pyongyang (GMT+09:00)\",\n    tzCode: \"Asia/Pyongyang\",\n    name: \"(GMT+09:00) Pyongyang, Hamhŭng, Namp’o, Sunch’ŏn, Hŭngnam\",\n    utc: \"+09:00\",\n  },\n  {\n    label: \"Asia/Seoul (GMT+09:00)\",\n    tzCode: \"Asia/Seoul\",\n    name: \"(GMT+09:00) Seoul, Busan, Incheon, Daegu, Daejeon\",\n    utc: \"+09:00\",\n  },\n  {\n    label: \"Asia/Tokyo (GMT+09:00)\",\n    tzCode: \"Asia/Tokyo\",\n    name: \"(GMT+09:00) Tokyo, Yokohama, Osaka, Nagoya, Sapporo\",\n    utc: \"+09:00\",\n  },\n  {\n    label: \"Asia/Yakutsk (GMT+09:00)\",\n    tzCode: \"Asia/Yakutsk\",\n    name: \"(GMT+09:00) Yakutsk, Blagoveshchensk, Belogorsk, Neryungri, Svobodnyy\",\n    utc: \"+09:00\",\n  },\n  {\n    label: \"Pacific/Palau (GMT+09:00)\",\n    tzCode: \"Pacific/Palau\",\n    name: \"(GMT+09:00) Koror, Koror Town, Kloulklubed, Ulimang, Mengellang\",\n    utc: \"+09:00\",\n  },\n  {\n    label: \"Australia/Adelaide (GMT+09:30)\",\n    tzCode: \"Australia/Adelaide\",\n    name: \"(GMT+09:30) Adelaide, Adelaide Hills, Mount Gambier, Morphett Vale, Gawler\",\n    utc: \"+09:30\",\n  },\n  {\n    label: \"Australia/Broken_Hill (GMT+09:30)\",\n    tzCode: \"Australia/Broken_Hill\",\n    name: \"(GMT+09:30) Broken Hill\",\n    utc: \"+09:30\",\n  },\n  {\n    label: \"Australia/Darwin (GMT+09:30)\",\n    tzCode: \"Australia/Darwin\",\n    name: \"(GMT+09:30) Darwin, Alice Springs, Palmerston, Howard Springs\",\n    utc: \"+09:30\",\n  },\n  {\n    label: \"Antarctica/DumontDUrville (GMT+10:00)\",\n    tzCode: \"Antarctica/DumontDUrville\",\n    name: \"(GMT+10:00) DumontDUrville\",\n    utc: \"+10:00\",\n  },\n  {\n    label: \"Antarctica/Macquarie (GMT+10:00)\",\n    tzCode: \"Antarctica/Macquarie\",\n    name: \"(GMT+10:00) Macquarie\",\n    utc: \"+10:00\",\n  },\n  {\n    label: \"Asia/Ust-Nera (GMT+10:00)\",\n    tzCode: \"Asia/Ust-Nera\",\n    name: \"(GMT+10:00) Ust-Nera\",\n    utc: \"+10:00\",\n  },\n  {\n    label: \"Asia/Vladivostok (GMT+10:00)\",\n    tzCode: \"Asia/Vladivostok\",\n    name: \"(GMT+10:00) Vladivostok, Khabarovsk, Khabarovsk Vtoroy, Komsomolsk-on-Amur, Ussuriysk\",\n    utc: \"+10:00\",\n  },\n  {\n    label: \"Australia/Brisbane (GMT+10:00)\",\n    tzCode: \"Australia/Brisbane\",\n    name: \"(GMT+10:00) Brisbane, Gold Coast, Logan City, Townsville, Cairns\",\n    utc: \"+10:00\",\n  },\n  {\n    label: \"Australia/Currie (GMT+10:00)\",\n    tzCode: \"Australia/Currie\",\n    name: \"(GMT+10:00) Currie\",\n    utc: \"+10:00\",\n  },\n  {\n    label: \"Australia/Hobart (GMT+10:00)\",\n    tzCode: \"Australia/Hobart\",\n    name: \"(GMT+10:00) Hobart, Launceston, Burnie, Devonport, Sandy Bay\",\n    utc: \"+10:00\",\n  },\n  {\n    label: \"Australia/Lindeman (GMT+10:00)\",\n    tzCode: \"Australia/Lindeman\",\n    name: \"(GMT+10:00) Lindeman\",\n    utc: \"+10:00\",\n  },\n  {\n    label: \"Australia/Melbourne (GMT+10:00)\",\n    tzCode: \"Australia/Melbourne\",\n    name: \"(GMT+10:00) Melbourne, Geelong, Bendigo, Ballarat, Melbourne City Centre\",\n    utc: \"+10:00\",\n  },\n  {\n    label: \"Australia/Sydney (GMT+10:00)\",\n    tzCode: \"Australia/Sydney\",\n    name: \"(GMT+10:00) Sydney, Canberra, Newcastle, Wollongong, Maitland\",\n    utc: \"+10:00\",\n  },\n  {\n    label: \"Pacific/Chuuk (GMT+10:00)\",\n    tzCode: \"Pacific/Chuuk\",\n    name: \"(GMT+10:00) Weno, Colonia\",\n    utc: \"+10:00\",\n  },\n  {\n    label: \"Pacific/GuamVillage (GMT+10:00)\",\n    tzCode: \"Pacific/GuamVillage\",\n    name: \"(GMT+10:00) Dededo Village, Yigo Village, Tamuning, Tamuning-Tumon-Harmon Village, Mangilao Village\",\n    utc: \"+10:00\",\n  },\n  {\n    label: \"Pacific/Port_Moresby (GMT+10:00)\",\n    tzCode: \"Pacific/Port_Moresby\",\n    name: \"(GMT+10:00) Port Moresby, Lae, Mount Hagen, Popondetta, Madang\",\n    utc: \"+10:00\",\n  },\n  {\n    label: \"Pacific/Saipan (GMT+10:00)\",\n    tzCode: \"Pacific/Saipan\",\n    name: \"(GMT+10:00) Saipan, San Jose Village\",\n    utc: \"+10:00\",\n  },\n  {\n    label: \"Australia/Lord_Howe (GMT+10:30)\",\n    tzCode: \"Australia/Lord_Howe\",\n    name: \"(GMT+10:30) Lord Howe\",\n    utc: \"+10:30\",\n  },\n  {\n    label: \"Antarctica/Casey (GMT+11:00)\",\n    tzCode: \"Antarctica/Casey\",\n    name: \"(GMT+11:00) Casey\",\n    utc: \"+11:00\",\n  },\n  {\n    label: \"Asia/Magadan (GMT+11:00)\",\n    tzCode: \"Asia/Magadan\",\n    name: \"(GMT+11:00) Magadan, Ust-Nera, Susuman, Ola\",\n    utc: \"+11:00\",\n  },\n  {\n    label: \"Asia/Sakhalin (GMT+11:00)\",\n    tzCode: \"Asia/Sakhalin\",\n    name: \"(GMT+11:00) Yuzhno-Sakhalinsk, Korsakov, Kholmsk, Okha, Nevel’sk\",\n    utc: \"+11:00\",\n  },\n  {\n    label: \"Asia/Srednekolymsk (GMT+11:00)\",\n    tzCode: \"Asia/Srednekolymsk\",\n    name: \"(GMT+11:00) Srednekolymsk\",\n    utc: \"+11:00\",\n  },\n  {\n    label: \"Pacific/Bougainville (GMT+11:00)\",\n    tzCode: \"Pacific/Bougainville\",\n    name: \"(GMT+11:00) Arawa, Buka\",\n    utc: \"+11:00\",\n  },\n  {\n    label: \"Pacific/Efate (GMT+11:00)\",\n    tzCode: \"Pacific/Efate\",\n    name: \"(GMT+11:00) Port-Vila, Luganville, Isangel, Sola, Lakatoro\",\n    utc: \"+11:00\",\n  },\n  {\n    label: \"Pacific/Guadalcanal (GMT+11:00)\",\n    tzCode: \"Pacific/Guadalcanal\",\n    name: \"(GMT+11:00) Honiara, Malango, Auki, Gizo, Buala\",\n    utc: \"+11:00\",\n  },\n  {\n    label: \"Pacific/Kosrae (GMT+11:00)\",\n    tzCode: \"Pacific/Kosrae\",\n    name: \"(GMT+11:00) Tofol\",\n    utc: \"+11:00\",\n  },\n  {\n    label: \"Pacific/Norfolk (GMT+11:00)\",\n    tzCode: \"Pacific/Norfolk\",\n    name: \"(GMT+11:00) Kingston\",\n    utc: \"+11:00\",\n  },\n  {\n    label: \"Pacific/Noumea (GMT+11:00)\",\n    tzCode: \"Pacific/Noumea\",\n    name: \"(GMT+11:00) Nouméa, Mont-Dore, Dumbéa, Païta, Wé\",\n    utc: \"+11:00\",\n  },\n  {\n    label: \"Pacific/Pohnpei (GMT+11:00)\",\n    tzCode: \"Pacific/Pohnpei\",\n    name: \"(GMT+11:00) Kolonia, Kolonia Town, Palikir - National Government Center\",\n    utc: \"+11:00\",\n  },\n  {\n    label: \"Antarctica/McMurdo (GMT+12:00)\",\n    tzCode: \"Antarctica/McMurdo\",\n    name: \"(GMT+12:00) McMurdo\",\n    utc: \"+12:00\",\n  },\n  {\n    label: \"Asia/Anadyr (GMT+12:00)\",\n    tzCode: \"Asia/Anadyr\",\n    name: \"(GMT+12:00) Anadyr, Bilibino\",\n    utc: \"+12:00\",\n  },\n  {\n    label: \"Asia/Kamchatka (GMT+12:00)\",\n    tzCode: \"Asia/Kamchatka\",\n    name: \"(GMT+12:00) Petropavlovsk-Kamchatsky, Yelizovo, Vilyuchinsk, Klyuchi, Mil’kovo\",\n    utc: \"+12:00\",\n  },\n  {\n    label: \"Pacific/Auckland (GMT+12:00)\",\n    tzCode: \"Pacific/Auckland\",\n    name: \"(GMT+12:00) Auckland, Wellington, Christchurch, Manukau City, North Shore\",\n    utc: \"+12:00\",\n  },\n  {\n    label: \"Pacific/Fiji (GMT+12:00)\",\n    tzCode: \"Pacific/Fiji\",\n    name: \"(GMT+12:00) Suva, Lautoka, Nadi, Labasa, Ba\",\n    utc: \"+12:00\",\n  },\n  {\n    label: \"Pacific/Funafuti (GMT+12:00)\",\n    tzCode: \"Pacific/Funafuti\",\n    name: \"(GMT+12:00) Funafuti, Savave Village, Tanrake Village, Toga Village, Asau Village\",\n    utc: \"+12:00\",\n  },\n  {\n    label: \"Pacific/Kwajalein (GMT+12:00)\",\n    tzCode: \"Pacific/Kwajalein\",\n    name: \"(GMT+12:00) Ebaye, Jabat\",\n    utc: \"+12:00\",\n  },\n  {\n    label: \"Pacific/Majuro (GMT+12:00)\",\n    tzCode: \"Pacific/Majuro\",\n    name: \"(GMT+12:00) Majuro, Arno, Jabor, Wotje, Mili\",\n    utc: \"+12:00\",\n  },\n  {\n    label: \"Pacific/Nauru (GMT+12:00)\",\n    tzCode: \"Pacific/Nauru\",\n    name: \"(GMT+12:00) Yaren, Baiti, Anabar, Uaboe, Ijuw\",\n    utc: \"+12:00\",\n  },\n  {\n    label: \"Pacific/Tarawa (GMT+12:00)\",\n    tzCode: \"Pacific/Tarawa\",\n    name: \"(GMT+12:00) Tarawa, Betio Village, Bikenibeu Village\",\n    utc: \"+12:00\",\n  },\n  {\n    label: \"Pacific/Wake (GMT+12:00)\",\n    tzCode: \"Pacific/Wake\",\n    name: \"(GMT+12:00) Wake\",\n    utc: \"+12:00\",\n  },\n  {\n    label: \"Pacific/Wallis (GMT+12:00)\",\n    tzCode: \"Pacific/Wallis\",\n    name: \"(GMT+12:00) Mata-Utu, Leava, Alo\",\n    utc: \"+12:00\",\n  },\n  {\n    label: \"Pacific/Chatham (GMT+12:45)\",\n    tzCode: \"Pacific/Chatham\",\n    name: \"(GMT+12:45) Waitangi\",\n    utc: \"+12:45\",\n  },\n  {\n    label: \"Pacific/Apia (GMT+13:00)\",\n    tzCode: \"Pacific/Apia\",\n    name: \"(GMT+13:00) Apia, Asau, Mulifanua, Afega, Leulumoega\",\n    utc: \"+13:00\",\n  },\n  {\n    label: \"Pacific/Enderbury (GMT+13:00)\",\n    tzCode: \"Pacific/Enderbury\",\n    name: \"(GMT+13:00) Enderbury\",\n    utc: \"+13:00\",\n  },\n  {\n    label: \"Pacific/Fakaofo (GMT+13:00)\",\n    tzCode: \"Pacific/Fakaofo\",\n    name: \"(GMT+13:00) Atafu Village, Nukunonu, Fale old settlement\",\n    utc: \"+13:00\",\n  },\n  {\n    label: \"Pacific/Tongatapu (GMT+13:00)\",\n    tzCode: \"Pacific/Tongatapu\",\n    name: \"(GMT+13:00) Nuku‘alofa, Lapaha, Neiafu, Pangai, ‘Ohonua\",\n    utc: \"+13:00\",\n  },\n  {\n    label: \"Pacific/Kiritimati (GMT+14:00)\",\n    tzCode: \"Pacific/Kiritimati\",\n    name: \"(GMT+14:00) Kiritimati\",\n    utc: \"+14:00\",\n  },\n];\n\nexport { timeZone, timeZones };\n","import { Select } from \"@windmill/react-ui\";\nimport React from \"react\";\n\n//internal import\nimport { timeZones } from \"utils/timezones\";\n\nconst SelectTimeZone = ({ register, name, label, required }) => {\n  return (\n    <Select\n      className={`border text-sm focus:outline-none block w-full bg-gray-100 dark:bg-white border-transparent focus:bg-white h-12`}\n      name={name}\n      {...register(`${name}`, {\n        required: required ? false : `${label} is required!`,\n      })}\n    >\n      <option value=\"\" defaultValue hidden>\n        Default Time Zone\n      </option>\n      {timeZones.map((timeZone, i) => (\n        <option key={i + 1} value={timeZone.tzCode} className=\"py-12 hover:bg-white\">\n          {timeZone.label}\n        </option>\n      ))}\n    </Select>\n  );\n};\n\nexport default SelectTimeZone;\n","import { useContext, useEffect, useState } from \"react\";\nimport { useForm } from \"react-hook-form\";\n\n//internal import\nimport { SidebarContext } from \"context/SidebarContext\";\nimport SettingServices from \"services/SettingServices\";\nimport { notifyError, notifySuccess } from \"utils/toast\";\n\nconst useSettingSubmit = (id) => {\n  const { setIsUpdate } = useContext(SidebarContext);\n  const [isSave, setIsSave] = useState(true);\n  const [isSubmitting, setIsSubmitting] = useState(false);\n\n  const {\n    register,\n    handleSubmit,\n    setValue,\n    formState: { errors },\n  } = useForm();\n\n  const onSubmit = async (data) => {\n    // return notifyError(\"CRUD operation is disabled for this option!\");\n    try {\n      setIsSubmitting(true);\n      const settingData = {\n        name: \"globalSetting\",\n        setting: {\n          number_of_image_per_product: data.number_of_image_per_product,\n          shop_name: data.shop_name,\n          address: data.address,\n          company_name: data.company_name,\n          vat_number: data.vat_number,\n          post_code: data.post_code,\n          contact: data.contact,\n          email: data.email,\n          website: data.website,\n          receipt_size: data.receipt_size,\n          default_currency: data.default_currency,\n          default_time_zone: data.default_time_zone,\n          default_date_format: data.default_date_format,\n        },\n      };\n\n      // console.log('global setting', globalSettingData);\n      // return;\n\n      if (!isSave) {\n        const res = await SettingServices.updateGlobalSetting(settingData);\n        setIsUpdate(true);\n        setIsSubmitting(false);\n        // window.location.reload();\n        notifySuccess(res.message);\n      } else {\n        const res = await SettingServices.addGlobalSetting(settingData);\n        setIsUpdate(true);\n        setIsSubmitting(false);\n        // window.location.reload();\n        notifySuccess(res.message);\n      }\n    } catch (err) {\n      notifyError(err ? err?.response?.data?.message : err.message);\n      setIsSubmitting(false);\n    }\n  };\n\n  useEffect(() => {\n    (async () => {\n      try {\n        const res = await SettingServices.getGlobalSetting();\n        // console.log(\"res>>>\", res);\n        if (res) {\n          setIsSave(false);\n          setValue(\n            \"number_of_image_per_product\",\n            res.number_of_image_per_product\n          );\n\n          setValue(\"shop_name\", res.shop_name);\n          setValue(\"address\", res.address);\n          setValue(\"company_name\", res.company_name);\n          setValue(\"vat_number\", res.vat_number);\n          setValue(\"post_code\", res.post_code);\n          setValue(\"contact\", res.contact);\n          setValue(\"email\", res.email);\n          setValue(\"website\", res.website);\n          setValue(\"receipt_size\", res.receipt_size);\n          setValue(\"default_currency\", res.default_currency);\n          setValue(\"default_time_zone\", res?.default_time_zone);\n          setValue(\"default_date_format\", res?.default_date_format);\n        }\n      } catch (err) {\n        notifyError(err ? err?.response?.data?.message : err.message);\n      }\n    })();\n  }, [setValue]);\n\n  return {\n    errors,\n    register,\n    handleSubmit,\n    onSubmit,\n    isSave,\n    isSubmitting,\n  };\n};\n\nexport default useSettingSubmit;\n","import { Select } from '@windmill/react-ui';\nimport useAsync from 'hooks/useAsync';\nimport CurrencyServices from 'services/CurrencyServices';\n// import { CODES } from 'currencies-map';\n\nconst SelectCurrency = ({\n  register,\n  name,\n  label,\n  required,\n  loading,\n  currencies,\n}) => {\n  // const { data, loading } = useAsync(CurrencyServices.getAllCurrency);\n  // Added By: Govinda 23 /04 / 2024\n  // const { data, loading } = useAsync(CurrencyServices.getAllCurrency);\n  console.log(\"currecnies : \", currencies)\n  return (\n    <>\n      {loading ? (\n        'Loading...'\n      ) : (\n        <Select\n          className={`border text-sm focus:outline-none block w-full bg-gray-100 dark:bg-white border-transparent focus:bg-white h-12`}\n          name={name}\n          {...register(`${name}`, {\n            required: required ? false : `${label} is required!`,\n          })}\n        >\n          {currencies?.map((currency) => (\n            <option key={currency._id} value={`${currency.symbol}`}>\n              {currency?.name}\n            </option>\n          ))}\n          {/* <option key={1} value={`$`}>\n            Dollar\n          </option> */}\n        </Select>\n      )}\n    </>\n  );\n};\nexport default SelectCurrency;\n","import { Select } from \"@windmill/react-ui\";\n\nconst SelectReceiptSize = ({\n  setPosCustomer,\n  register,\n  name,\n  label,\n  pos,\n  required,\n}) => {\n  return (\n    <>\n      <Select\n        onChange={(e) => setPosCustomer(e.target.value)}\n        className={`border text-sm focus:outline-none block w-full bg-gray-100 dark:bg-white border-transparent focus:bg-white ${\n          pos ? \"h-10\" : \"h-12\"\n        }`}\n        name={name}\n        {...register(`${name}`, {\n          required: required ? false : `${label} is required!`,\n        })}\n      >\n        {/* <option value=\"\" defaultValue hidden>\n            Default POS Customer \n        </option> */}\n        <option value=\"57-mm\" defaultValue>\n          57 mm\n        </option>\n        <option value=\"80-mm\">80 mm</option>\n        <option value=\"3-1/8\">3 1/8\"</option>\n        <option value=\"2-1/4\">2 1/4\"</option>\n        <option value=\"A4\">A4</option>\n      </Select>\n    </>\n  );\n};\n\nexport default SelectReceiptSize;\n","import { Button, Select } from '@windmill/react-ui';\nimport { useTranslation } from 'react-i18next';\nimport React, { useState } from 'react';\n\n//internal import\nimport Error from 'components/form/Error';\nimport spinnerLoadingImage from 'assets/img/spinner.gif';\nimport InputAreaTwo from 'components/form/InputAreaTwo';\nimport SelectTimeZone from 'components/form/SelectTimeZone';\nimport PageTitle from 'components/Typography/PageTitle';\nimport useSettingSubmit from 'hooks/useSettingSubmit';\nimport SelectCurrency from 'components/form/SelectCurrency';\nimport SelectReceiptSize from 'components/form/SelectPrintSize';\nimport { useEffect } from 'react';\nimport requests from 'services/httpService';\nimport useAsync from 'hooks/useAsync';\nimport CustomerServices from 'services/CustomerServices';\nimport SettingServices from 'services/SettingServices';\nimport CurrencyServices from 'services/CurrencyServices';\n\nconst Setting = () => {\n  const { errors, register, handleSubmit, onSubmit, isSave, isSubmitting } =\n    useSettingSubmit();\n\n  const { t } = useTranslation();\n  const [color, setColor] = useState('#6590D5');\n  // const { data, loading } = useAsync(SettingServices.getGlobalSetting);\n\n  const handleChange = (event) => {\n    setColor(event.target.value);\n  };\n  const [currencies, setCurrencies] = useState([]);\n\n  useEffect(() => {\n    // Fetch currencies when the component mounts\n    CurrencyServices.getAllCurrency()\n      .then((data) => {\n        // Sort the currencies\n        const sortedCurrencies = data.sort((a, b) => a.priority - b.priority);\n        // Set the sorted currencies to state\n        setCurrencies(sortedCurrencies);\n      })\n      .catch((error) => {\n        console.error('Error fetching currencies:', error);\n      });\n  }, []);\n  console.log(\"hi: \", currencies)\n  // Empty dependency array ensures this effect runs only once\n  // const [categories, setCategories] = useState([]);\n\n  // useEffect(() => {\n  //   const fetchCategories = async () => {\n  //     try {\n  //       console.log(\"settings customers detials...\");\n  //       const response = await requests.get('/api/setting/global/all');\n  //       console.log(\"settings fetched successfully:\", response);\n  //       setCategories(response);\n  //     } catch (error) {\n  //       console.error('Error fetching categories:', error);\n  //     }\n  //   };\n  //   fetchCategories();\n  // }, []);\n\n  return (\n    <>\n      <PageTitle>{t('Setting')}</PageTitle>\n\n      <div className='container p-6 mx-auto bg-white  dark:bg-gray-800 dark:text-gray-200 rounded-lg'>\n        <form onSubmit={handleSubmit(onSubmit)}>\n          <div className='grid grid-cols-12 font-sans'>\n            <div className='col-span-12 md:col-span-12 lg:col-span-12 mr-3 '>\n              <div className='lg:px-6 pt-4 lg:pl-40 lg:pr-40 md:pl-5 md:pr-5 flex-grow scrollbar-hide w-full max-h-full pb-0'>\n                <div className='grid md:grid-cols-5 items-center sm:grid-cols-12 gap-3 md:gap-5 xl:gap-6 lg:gap-6 mb-6'>\n                  <label className='block text-sm font-semibold text-gray-600 dark:text-gray-400 mb-1 sm:col-span-2'>\n                    {t('NumberOfImagesPerProduct')}\n                  </label>\n                  <div className='sm:col-span-3'>\n                    <InputAreaTwo\n                      register={register}\n                      label={t('NumberOfImagesPerProduct')}\n                      name='number_of_image_per_product'\n                      type='number'\n                      placeholder={t('NumberOfImagesPerProduct')}\n                    />\n                    <Error errorName={errors.number_of_image_per_product} pos />\n                  </div>\n                </div>\n                <div className='grid md:grid-cols-5 items-center sm:grid-cols-12 gap-3 md:gap-5 xl:gap-6 lg:gap-6 mb-6'>\n                  <label className='block text-sm font-semibold text-gray-600 dark:text-gray-400 mb-1 sm:col-span-2'>\n                    {t('ColorPicker')}\n                  </label>\n                  <div className='sm:col-span-3'>\n                    <input\n                      id='nativeColorPicker1'\n                      type='color'\n                      value={color}\n                      onChange={handleChange}\n                    />\n                  </div>\n                </div>\n\n                <div className='grid md:grid-cols-5 items-center sm:grid-cols-12 gap-3 md:gap-5 xl:gap-6 lg:gap-6 mb-6'>\n                  <label className='block text-sm text-gray-600 font-semibold dark:text-gray-400 mb-1 sm:col-span-2'>\n                    {t('DefaultCurrency')}\n                  </label>\n\n                  <div className='sm:col-span-3'>\n                    <div className='col-span-8 sm:col-span-4'>\n                      <SelectCurrency\n                        register={register}\n                        label='Currency'\n                        name='default_currency'\n                        required\n                        currencies={currencies}\n                      />\n                    </div>\n                  </div>\n                </div>\n\n                <div className='grid md:grid-cols-5 items-center sm:grid-cols-12 gap-3 md:gap-5 xl:gap-6 lg:gap-6 mb-6'>\n                  <label className='block text-sm font-semibold text-gray-600 dark:text-gray-400 mb-1 sm:col-span-2'>\n                    {t('TimeZone')}\n                  </label>\n\n                  <div className='sm:col-span-3'>\n                    <SelectTimeZone\n                      register={register}\n                      name='default_time_zone'\n                      label='Time Zone'\n                    />\n                    <Error errorName={errors.default_time_zone} pos />\n                  </div>\n                </div>\n\n                <div className='grid md:grid-cols-5 items-center sm:grid-cols-12 gap-3 md:gap-5 xl:gap-6 lg:gap-6 mb-6'>\n                  <label className='block text-sm font-semibold text-gray-600 dark:text-gray-400 mb-1 sm:col-span-2'>\n                    {t('DefaultDateFormat')}\n                  </label>\n\n                  <div className='sm:col-span-3'>\n                    <Select\n                      {...register(`default_date_format`, {\n                        required: 'Default date formate is required',\n                      })}\n                      className='border h-12 text-sm focus:outline-none block w-full bg-gray-100 border-transparent focus:bg-white'\n                    >\n                      <option value='' defaultValue hidden>\n                        {t('DefaultDateFormat')}\n                      </option>\n                      <option value='MMM D, YYYY'>MM/DD/YYYY</option>\n                      <option value='D MMM, YYYY'>DD/MM/YYYY</option>\n                      <option value='YYYY,MMM D'>YYYY/MM/DD</option>\n                    </Select>\n                    <Error errorName={errors.default_date_format} pos />\n                  </div>\n                </div>\n\n                <div className='grid md:grid-cols-5 sm:grid-cols-12 gap-3 md:gap-5 xl:gap-6 lg:gap-6 mb-6 relative'>\n                  <label className='block text-sm text-gray-600 font-semibold dark:text-gray-400 mb-1 sm:col-span-2'>\n                    {t('ReceiptSize')}\n                  </label>\n                  <div className='sm:col-span-3'>\n                    <SelectReceiptSize\n                      label='Role'\n                      register={register}\n                      name='receipt_size'\n                    />\n                    <Error errorName={errors.receipt_size} pos />\n                  </div>\n                </div>\n\n                <div className='grid md:grid-cols-5 items-center sm:grid-cols-12 gap-3 md:gap-5 xl:gap-6 lg:gap-6 mb-6'>\n                  <label className='block text-sm font-semibold text-gray-600 dark:text-gray-400 mb-1 sm:col-span-2'>\n                    {t('ShopName')}\n                  </label>\n                  <div className='sm:col-span-3'>\n                    <InputAreaTwo\n                      register={register}\n                      label={t('ShopName')}\n                      name='shop_name'\n                      type='text'\n                      placeholder={t('ShopName')}\n                    />\n                    <Error errorName={errors.shop_name} pos />\n                  </div>\n                </div>\n                <div className='grid md:grid-cols-5 items-center sm:grid-cols-12 gap-3 md:gap-5 xl:gap-6 lg:gap-6 mb-6'>\n                  <label className='block text-sm font-semibold text-gray-600 dark:text-gray-400 mb-1 sm:col-span-2'>\n                    {t('InvoiceCompanyName')}\n                  </label>\n                  <div className='sm:col-span-3'>\n                    <InputAreaTwo\n                      register={register}\n                      label={t('InvoiceCompanyName')}\n                      name='company_name'\n                      type='text'\n                      placeholder={t('InvoiceCompanyName')}\n                    />\n                    <Error errorName={errors.company_name} pos />\n                  </div>\n                </div>\n                <div className='grid md:grid-cols-5 items-center sm:grid-cols-12 gap-3 md:gap-5 xl:gap-6 lg:gap-6 mb-6'>\n                  <label className='block text-sm font-semibold text-gray-600 dark:text-gray-400 mb-1 sm:col-span-2'>\n                    {/* {t(\"FooterAddress\")} */}\n                    {t('VatNumber')}\n                  </label>\n                  <div className='sm:col-span-3'>\n                    <InputAreaTwo\n                      required\n                      register={register}\n                      label='Address'\n                      name='vat_number'\n                      type='text'\n                      placeholder='Vat Number'\n                    />\n                    <Error errorName={errors.vat_number} pos />\n                  </div>\n                </div>\n                <div className='grid md:grid-cols-5 items-center sm:grid-cols-12 gap-3 md:gap-5 xl:gap-6 lg:gap-6 mb-6'>\n                  <label className='block text-sm font-semibold text-gray-600 dark:text-gray-400 mb-1 sm:col-span-2'>\n                    {t('AddressLine')}\n                  </label>\n                  <div className='sm:col-span-3'>\n                    <InputAreaTwo\n                      register={register}\n                      label='Address'\n                      name='address'\n                      type='text'\n                      placeholder='Address'\n                    />\n                    <Error errorName={errors.address} pos />\n                  </div>\n                </div>\n\n                <div className='grid md:grid-cols-5 items-center sm:grid-cols-12 gap-3 md:gap-5 xl:gap-6 lg:gap-6 mb-6'>\n                  <label className='block text-sm font-semibold text-gray-600 dark:text-gray-400 mb-1 sm:col-span-2'>\n                    {t('PostCode')}\n                  </label>\n                  <div className='sm:col-span-3'>\n                    <InputAreaTwo\n                      required\n                      register={register}\n                      label='Address'\n                      name='post_code'\n                      type='text'\n                      placeholder='Post Code'\n                    />\n                    <Error errorName={errors.post_code} pos />\n                  </div>\n                </div>\n\n                <div className='grid md:grid-cols-5 items-center sm:grid-cols-12 gap-3 md:gap-5 xl:gap-6 lg:gap-6 mb-6'>\n                  <label className='block text-sm font-semibold text-gray-600 dark:text-gray-400 mb-1 sm:col-span-2'>\n                    {t('GlobalContactNumber')}\n                  </label>\n                  <div className=' sm:col-span-3'>\n                    <InputAreaTwo\n                      register={register}\n                      label='Phone'\n                      name='contact'\n                      type='text'\n                      placeholder='Contact Number'\n                    />\n                    <Error errorName={errors.contact} pos />\n                  </div>\n                </div>\n\n                <div className='grid md:grid-cols-5 items-center sm:grid-cols-12 gap-3 md:gap-5 xl:gap-6 lg:gap-6 mb-6'>\n                  <label className='block text-sm font-semibold text-gray-600 dark:text-gray-400 mb-1 sm:col-span-2'>\n                    {t('FooterEmail')}\n                  </label>\n                  <div className=' sm:col-span-3'>\n                    <InputAreaTwo\n                      register={register}\n                      label='Email'\n                      name='email'\n                      type='text'\n                      placeholder='Email'\n                    />\n                    <Error errorName={errors.email} pos />\n                  </div>\n                </div>\n                <div className='grid md:grid-cols-5 items-center sm:grid-cols-12 gap-3 md:gap-5 xl:gap-6 lg:gap-6 mb-6'>\n                  <label className='block text-sm font-semibold text-gray-600 dark:text-gray-400 mb-1 sm:col-span-2'>\n                    {t('WebSite')}\n                  </label>\n                  <div className=' sm:col-span-3'>\n                    <InputAreaTwo\n                      required\n                      register={register}\n                      label='Email'\n                      name='website'\n                      type='text'\n                      placeholder='Web Site'\n                    />\n                    <Error errorName={errors.website} pos />\n                  </div>\n                </div>\n                <div className='flex flex-row-reverse pb-6'>\n                  {isSubmitting ? (\n                    <Button disabled={true} type='button' className='h-12'>\n                      <img\n                        src={spinnerLoadingImage}\n                        alt='Loading'\n                        width={20}\n                        height={10}\n                      />{' '}\n                      <span className='font-serif ml-2 font-light'>\n                        Processing\n                      </span>\n                    </Button>\n                  ) : (\n                    <Button type='submit' className='h-12 px-8'>\n                      {' '}\n                      {isSave ? 'Save' : 'Update'}\n                    </Button>\n                  )}\n                </div>\n              </div>\n            </div>\n          </div>\n        </form>\n      </div>\n    </>\n  );\n};\nexport default Setting;\n","// import currencies from 'utils/currency';\n// import requests from './httpService';\n\n// const CurrencyServices = {\n//   getAllCurrency: async () => {\n//     return requests.get('/currency');\n//   },\n\n//   getShowingCurrency: async () => {\n//     return requests.get('/currency/show');\n//   },\n\n//   getCurrencyById: async (id) => {\n//     return requests.get(`/currency/${id}`);\n//   },\n\n//   addCurrency: async (body) => {\n//     // return requests.post('/currency/add', body);\n//     // addProduct: async (body) => {\n//     try {\n//       console.log(\"Adding currency:\", body);\n//       await new Promise(resolve => setTimeout(resolve, 1000));\n//       currencies.push(body);\n//       return { success: true, message: \"currency added successfully\" };\n//     } catch (error) {\n//       return { success: false, message: \"Failed to add currency\" };\n//     }\n//     // },\n//   },\n\n//   addAllCurrency: async (body) => {\n//     return requests.post('/currency/add/all', body);\n//   },\n\n//   updateCurrency: async (id, body) => {\n//     return requests.put(`/currency/${id}`, body);\n//   },\n\n//   updateManyCurrencies: async (body) => {\n//     return requests.patch('currency/update/many', body);\n//   },\n\n//   updateEnabledStatus: async (id, body) => {\n//     return requests.put(`/currency/status/enabled/${id}`, body);\n//   },\n\n//   updateLiveExchangeRateStatus: async (id, body) => {\n//     return requests.put(`/currency/status/live-exchange-rates/${id}`, body);\n//   },\n\n\n//   deleteCurrency: async (index) => {\n//     // return requests.delete(`/category/${id}`, body);\n//     try {\n//       console.log(\"Deleting currency at index:\", index);\n//       await new Promise(resolve => setTimeout(resolve, 1000))\n//       currencies.splice(index, 1);\n//       return { success: true, message: \"Currency deleted successfully\" };\n//     } catch (error) {\n//       return { success: false, message: \"Failed to delete currency\" };\n//     }\n//     // console.log(\"5\", body)\n//     // const { ids } = body;\n//     // try {\n//     //   await new Promise(resolve => setTimeout(resolve, 1000));\n//     //   const updatedProducts = currencies.filter(product => !ids.includes(product._id));\n//     //   currencies.length = 0;\n//     //   updatedProducts.forEach(product => currencies.push(product));\n//     //   return { success: true, message: \"Products deleted successfully\", data: updatedProducts };\n//     // } catch (error) {\n//     //   return { success: false, message: \"Failed to delete products\" };\n//     // }\n//   },\n\n\n//   // deleteCurrency: async (index) => {\n\n//   //   console.log(\"5\", body)\n//   //   const { ids } = body;\n//   //   try {\n//   //     await new Promise(resolve => setTimeout(resolve, 1000));\n//   //     const updatedProducts = currencies.filter(product => !ids.includes(product._id));\n//   //     currencies.length = 0;\n//   //     updatedProducts.forEach(product => currencies.push(product));\n//   //     return { success: true, message: \"Products deleted successfully\", data: updatedProducts };\n//   //   } catch (error) {\n//   //     return { success: false, message: \"Failed to delete products\" };\n//   //   }\n//   // },\n\n//   deleteManyCurrency: async (body) => {\n//     // return requests.patch('/currency/delete/many', body);\n//     console.log(\"5\", body);\n//     const { ids, category } = body;\n//     try {\n//       await new Promise(resolve => setTimeout(resolve, 1000));\n//       const updatedCategories = currencies.filter(cat => !ids.includes(cat._id));\n//       currencies.length = 0;\n//       updatedCategories.forEach(cat => currencies.push(cat));\n//       return { success: true, message: \"Categories deleted successfully\", data: updatedCategories };\n//     } catch (error) {\n//       return { success: false, message: \"Failed to delete categories\" };\n//     }\n\n//   },\n// };\n\n// export default CurrencyServices;\n\n\n// for the backend for now addedd heree for you sir yow\n\nimport requests from \"./httpService\";\n\nconst CurrencyServices = {\n  getAllCurrency: async () => {\n    return requests.get('/api/currency');\n  },\n\n  updatePriorities: async (currencies) => {\n    return requests.patch('/api/currency/update/priorities', currencies);\n  },\n\n  getShowingCurrency: async (data) => {\n    // console.log(\"datas :\", data)\n    return requests.get('/api/currency/show');\n  },\n\n  getCurrencyById: async (id) => {\n    return requests.get(`/api/currency/${id}`);\n  },\n\n  addCurrency: async (body) => {\n    return requests.post('/api/currency/add', body);\n  },\n\n  addAllCurrency: async (body) => {\n    return requests.post('/api/currency/add/all', body);\n  },\n\n  updateCurrency: async (id, body) => {\n    return requests.put(`/api/currency/${id}`, body);\n  },\n\n  updateManyCurrencies: async (body) => {\n    console.log(\"udpates currencies\", body);\n    return requests.patch('/api/currency/update/many', body);\n  },\n\n  updateEnabledStatus: async (id, body) => {\n    return requests.put(`/api/currency/status/enabled/${id}`, body);\n  },\n\n  updateLiveExchangeRateStatus: async (id, body) => {\n    return requests.put(`/api/currency/status/live-exchange-rates/${id}`, body);\n  },\n\n  deleteCurrency: async (id) => {\n    return requests.delete(`/api/currency/${id}`);\n  },\n\n  deleteManyCurrency: async (body) => {\n    return requests.patch('/api/currency/delete/many', body);\n  },\n};\n\nexport default CurrencyServices;\n","export default __webpack_public_path__ + \"static/media/spinner.da6beb0d.gif\";","import React from 'react'\n\nconst PageTitle = ({ children }) => {\n  return (\n    <h1 className=\"my-6 text-lg font-bold text-gray-700 dark:text-gray-300\">{children}</h1>\n  )\n}\n\nexport default PageTitle\n"],"sourceRoot":""}