{"version":3,"sources":["components/customer/CustomerOrderTable.js","pages/CustomerOrder.js","../node_modules/@babel/runtime/helpers/extends.js","services/OrderServices.js","components/preloader/Loading.js","utils/dateFormate.js","components/table/Status.js","components/form/SelectStatus.js"],"names":["CustomerOrderTable","_ref","orders","categories","setCategories","useState","data","loading","useAsync","CustomerServices","getAllCustomers","globalSetting","useFilter","_jsx","_Fragment","children","TableBody","map","order","_order$_id","_order$user_info","_order$user_info2","_jsxs","TableRow","TableCell","className","_id","substring","dayjs","createdAt","format","showDateFormat","default_date_format","user_info","address","contact","paymentMethod","parseFloat","total","toFixed","Status","status","CustomerOrder","id","useParams","t","useTranslation","error","OrderServices","getOrderCustomer","handleChangePage","totalResults","resultsPerPage","dataTable","PageTitle","Loading","length","IoBagHandle","TableContainer","Table","TableHeader","TableFooter","Pagination","onChange","label","_extends","module","exports","Object","assign","bind","target","i","arguments","source","key","prototype","hasOwnProperty","call","__esModule","apply","this","getAllOrders","async","requests","get","getAllOrdersTwo","invoice","body","headers","searchInvoice","getRecentOrders","page","limit","startDate","endDate","_ref2","getOrderById","updateOrder","put","deleteOrder","delete","getDashboardOrdersData","_ref3","getDashboardAmount","getDashboardCount","getDashboardRecentOrder","_ref4","getBestSellerProductChart","ScaleLoader","color","height","width","radius","margin","dateFormat","showDateTimeFormat","date","time","Badge","type","SelectStatus","setIsUpdate","useContext","SidebarContext","Select","e","handleChangeStatus","then","res","notifySuccess","message","catch","err","notifyError","value","defaultValue","hidden"],"mappings":"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","file":"static/js/29.2dd95b33.chunk.js","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { TableCell, TableBody, TableRow } from \"@windmill/react-ui\";\nimport Status from \"components/table/Status\";\nimport SelectStatus from \"components/form/SelectStatus\";\nimport useFilter from \"hooks/useFilter\";\nimport { showDateFormat } from \"utils/dateFormate\";\nimport CustomerServices from \"services/CustomerServices\";\nimport useAsync from \"hooks/useAsync\";\nimport requests from \"services/httpService\";\nimport dayjs from \"dayjs\";\nimport { or } from \"ajv/dist/compile/codegen\";\n\n// import Status from '../table/Status';\n// import SelectStatus from '../form/SelectStatus';\n\nconst CustomerOrderTable = ({ orders }) => {\n  const [categories, setCategories] = useState([]);\n  const { data, loading } = useAsync(CustomerServices.getAllCustomers);\n  const { globalSetting } = useFilter(data);\n\n  // useEffect(() => {\n  //   const fetchCategories = async () => {\n  //     try {\n  //       console.log(\"Fetching customerorders...\");\n  //       const response = await requests.get('/api/customer');\n  //       console.log(\"customerOrders fetched successfully:\", response);\n  //       setCategories(response);\n  //     } catch (error) {\n  //       console.error('Error fetching categories:', error);\n  //     }\n  //   };\n  //   fetchCategories();\n  // }, []);\n  // console.log(\"orders :\", orders)\n\n  // orders?.map((order) => { console.log(\"orders\", order.) })\n  return (\n    <>\n      <TableBody>\n        {orders?.map((order) => (\n          <TableRow key={order._id}>\n            <TableCell>\n              <span className=\"font-semibold uppercase text-xs\">\n                {order?._id?.substring(20, 24)}\n              </span>\n            </TableCell>\n            <TableCell>\n              <span className=\"text-sm\">\n                {dayjs(order.createdAt).format(\"MMM D, YYYY\")}\n                {/* commeneted just for now change when needed  */}\n                {showDateFormat(\n                  order.createdAt,\n                  globalSetting?.default_date_format\n                )}\n              </span>\n            </TableCell>\n\n            <TableCell>\n              <span className=\"text-sm\">{order?.user_info?.address}</span>\n            </TableCell>\n            <TableCell>\n              {\" \"}\n              <span className=\"text-sm\">{order.user_info?.contact}</span>{\" \"}\n            </TableCell>\n            <TableCell>\n              <span className=\"text-sm font-semibold\">\n                {order.paymentMethod}\n              </span>\n            </TableCell>\n            <TableCell>\n              {\" \"}\n              <span className=\"text-sm font-semibold\">\n                ${parseFloat(order.total).toFixed(2)}\n              </span>{\" \"}\n            </TableCell>\n            <TableCell className=\"text-center\">\n              <Status status={order.status} />\n            </TableCell>\n            {/* added by : Govinda 19/04/2024 order was missing */}\n            {/* <TableCell className=\"text-right\">\n              <SelectStatus id={order._id} order={order} />\n            </TableCell> */}\n          </TableRow>\n        ))}\n      </TableBody>\n    </>\n  );\n};\n\nexport default CustomerOrderTable;\n","import React from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport {\n  Table,\n  TableHeader,\n  TableCell,\n  TableFooter,\n  TableContainer,\n  Pagination,\n} from \"@windmill/react-ui\";\nimport { IoBagHandle } from \"react-icons/io5\";\nimport useAsync from \"hooks/useAsync\";\nimport OrderServices from \"services/OrderServices\";\nimport useFilter from \"hooks/useFilter\";\nimport PageTitle from \"components/Typography/PageTitle\";\nimport Loading from \"components/preloader/Loading\";\nimport CustomerOrderTable from \"components/customer/CustomerOrderTable\";\nimport { useTranslation } from \"react-i18next\";\n\nconst CustomerOrder = () => {\n  const { id } = useParams();\n  const { t } = useTranslation();\n\n  const { data, loading, error } = useAsync(() =>\n    OrderServices.getOrderCustomer(id)\n  );\n\n  const { handleChangePage, totalResults, resultsPerPage, dataTable } =\n    useFilter(data);\n\n  return (\n    <>\n      <PageTitle>{t(\"CustomerOrderList\")}</PageTitle>\n\n      {loading && <Loading loading={loading} />}\n      {!error && !loading && dataTable.length === 0 && (\n        <div className=\"w-full bg-white rounded-md dark:bg-gray-800\">\n          <div className=\"p-8 text-center\">\n            <span className=\"flex justify-center my-30 text-red-500 font-semibold text-6xl\">\n              <IoBagHandle />\n            </span>\n            <h2 className=\"font-medium text-base mt-4 text-gray-600\">\n              {t(\"CustomerOrderEmpty\")}\n            </h2>\n          </div>\n        </div>\n      )}\n\n      {data.length > 0 && !error && !loading ? (\n        <TableContainer className=\"mb-8\">\n          <Table>\n            <TableHeader>\n              <tr>\n                <TableCell> {t(\"CustomerOrderId\")} </TableCell>\n                <TableCell>{t(\"CustomerOrderTime\")}</TableCell>\n                <TableCell>{t(\"CustomerShippingAddress\")}</TableCell>\n                <TableCell>{t(\"Phone\")} </TableCell>\n                <TableCell>{t(\"CustomerOrderMethod\")} </TableCell>\n                <TableCell>{t(\"Amount\")}</TableCell>\n                <TableCell className=\"text-center\">\n                  {t(\"CustomerOrderAction\")}\n                </TableCell>\n              </tr>\n            </TableHeader>\n            <CustomerOrderTable orders={dataTable} />\n          </Table>\n          <TableFooter>\n            <Pagination\n              totalResults={totalResults}\n              resultsPerPage={resultsPerPage}\n              onChange={handleChangePage}\n              label=\"Table navigation\"\n            />\n          </TableFooter>\n        </TableContainer>\n      ) : null}\n    </>\n  );\n};\n\nexport default CustomerOrder;\n","function _extends() {\n  module.exports = _extends = Object.assign ? Object.assign.bind() : function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n    return target;\n  }, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;\n  return _extends.apply(this, arguments);\n}\nmodule.exports = _extends, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","// // import { baseFileName } from \"coffee-script/lib/coffee-script/helpers\";\n// import requests from \"./httpService\";\n\n// const OrderServices = {\n//   getAllOrders: async (\n//     // {body,\n//     // headers,\n//     // customerName,\n//     // status,\n//     // page = 1,\n//     // limit = 8,\n//     // day,\n//     // startDate,\n//     // endDate,}\n//   ) => {\n//     // const searchName = customerName !== null ? customerName : \"\";\n//     // const searchStatus = status !== null ? status : \"\";\n//     // const searchDay = day !== null ? day : \"\";\n//     // const startD = startDate !== null ? startDate : \"\";\n//     // const endD = endDate !== null ? endDate : \"\";\n\n//     //   return requests.get(\n//     //     `/orders?customerName=${searchName}&status=${searchStatus}&day=${searchDay}&page=${page}&limit=${limit}&startDate=${startD}&endDate=${endD}`,\n//     //     body,\n//     //     headers\n//     //   );\n\n//     return {\n//       orders: [\n//         {\n//           _id: 1,\n//           invoice: 123,\n//           subTotal: 123,\n//           shippingCost: 123,\n//           discount: 30,\n//           total: 1230,\n//           paymentMethod: \"COD\",\n//           status: \"pending\",\n//           user_info: { name: \"Rohit\" },\n//           createdAt: 2022,\n//           updatedAt: \"Just-Now\",\n//         }\n//       ]\n//     }\n//   },\n\n//   getAllOrdersTwo: async ({ invoice, body, headers }) => {\n//     const searchInvoice = invoice !== null ? invoice : \"\";\n//     return requests.get(`/orders/all?invoice=${searchInvoice}`, body, headers);\n//   },\n\n//   getRecentOrders: async ({\n//     page = 1,\n//     limit = 8,\n//     startDate = \"1:00\",\n//     endDate = \"23:59\",\n//   }) => {\n//     return requests.get(\n//       `/orders/recent?page=${page}&limit=${limit}&startDate=${startDate}&endDate=${endDate}`\n//     );\n//   },\n\n//   getOrderCustomer: async (id, body) => {\n//     return requests.get(`/orders/customer/${id}`, body);\n//   },\n\n//   getOrderById: async (id, body) => {\n//     return requests.get(`/orders/${id}`, body);\n//   },\n\n//   updateOrder: async (id, body, headers) => {\n//     return requests.put(`/orders/${id}`, body, headers);\n//   },\n\n//   deleteOrder: async (id) => {\n//     return requests.delete(`/orders/${id}`);\n//   },\n\n//   getDashboardOrdersData: async ({\n//     page = 1,\n//     limit = 8,\n//     endDate = \"23:59\",\n//   }) => {\n//     return requests.get(\n//       `/orders/dashboard?page=${page}&limit=${limit}&endDate=${endDate}`\n//     );\n//   },\n\n//   getDashboardAmount: async () => {\n//     return requests.get(\"/orders/dashboard-amount\");\n//   },\n\n//   getDashboardCount: async () => {\n//     return requests.get(\"/orders/dashboard-count\");\n//   },\n\n//   getDashboardRecentOrder: async ({ page = 1, limit = 8 }) => {\n//     return requests.get(\n//       `/orders/dashboard-recent-order?page=${page}&limit=${limit}`\n//     );\n//   },\n\n//   getBestSellerProductChart: async () => {\n//     return requests.get(\"/orders/best-seller/chart\");\n//   },\n// };\n\n// export default OrderServices;\n\n\nimport requests from \"./httpService\";\n\nconst OrderServices = {\n  getAllOrders: async () => {\n    return requests.get(\"/api/orders\");\n  },\n\n  getAllOrdersTwo: async ({ invoice, body, headers }) => {\n    const searchInvoice = invoice !== null ? invoice : \"\";\n    return requests.get(`/api/orders/all?invoice=${searchInvoice}`, body, headers);\n  },\n\n  getRecentOrders: async ({ page = 1, limit = 8, startDate = \"1:00\", endDate = \"23:59\" }) => {\n    return requests.get(`/api/orders/recent?page=${page}&limit=${limit}&startDate=${startDate}&endDate=${endDate}`);\n  },\n\n  getOrderCustomer: async (id, body) => {\n    return requests.get(`/api/orders/customer/${id}`, body);\n  },\n\n  getOrderById: async (id, body) => {\n    return requests.get(`/api/orders/${id}`, body);\n  },\n\n  updateOrder: async (id, body, headers) => {\n    return requests.put(`/api/orders/${id}`, body, headers);\n  },\n\n  deleteOrder: async (id) => {\n    return requests.delete(`/api/orders/${id}`);\n  },\n\n  getDashboardOrdersData: async ({ page = 1, limit = 8, endDate = \"23:59\" }) => {\n    return requests.get(`/api/orders/dashboard?page=${page}&limit=${limit}&endDate=${endDate}`);\n  },\n\n  getDashboardAmount: async () => {\n    return requests.get(\"/api/orders/dashboard-amount\");\n  },\n\n  getDashboardCount: async () => {\n    return requests.get(\"/api/orders/dashboard-count\");\n  },\n\n  getDashboardRecentOrder: async ({ page = 1, limit = 8 }) => {\n    return requests.get(`/api/orders/dashboard-recent-order?page=${page}&limit=${limit}`);\n  },\n\n  getBestSellerProductChart: async () => {\n    return requests.get(\"/api/orders/best-seller/chart\");\n  },\n};\n\nexport default OrderServices;\n","import React from 'react';\nimport ScaleLoader from 'react-spinners/ScaleLoader';\n\nconst Loading = ({ loading }) => {\n  return (\n    <div className=\"text-lg text-center py-6\">\n      <ScaleLoader\n        color=\"#34D399\"\n        loading={loading}\n        height={25}\n        width={3}\n        radius={3}\n        margin={4}\n      />\n    </div>\n  );\n};\n\nexport default Loading;\n","import * as dayjs from \"dayjs\";\n\nconst showTimeFormat = (data, timeFormat) => {\n  return dayjs(data).format(timeFormat);\n};\n\nconst showDateFormat = (data, dateFormat) => {\n  return dayjs(data).format(dateFormat);\n};\n\nconst showDateTimeFormat = (data, date, time) => {\n  return dayjs(data).format(`${date} ${time}`);\n};\n\nexport { showTimeFormat, showDateFormat, showDateTimeFormat };\n","import { Badge } from \"@windmill/react-ui\";\n\nconst Status = ({ status }) => {\n  return (\n    <>\n      <span className=\"font-serif\">\n        {(status === \"Pending\" || status === \"Inactive\") && (\n          <Badge type=\"warning\">{status}</Badge>\n        )}\n        {status === \"Waiting for Password Reset\" && (\n          <Badge type=\"warning\">{status}</Badge>\n        )}\n        {status === \"Processing\" && <Badge>{status}</Badge>}\n        {(status === \"Delivered\" || status === \"Active\") && (\n          <Badge type=\"success\">{status}</Badge>\n        )}\n        {status === \"Cancel\" && <Badge type=\"danger\">{status}</Badge>}\n        {status === `POS-Completed` && (\n          <Badge className=\"dark:bg-teal-900 bg-teal-100\">{status}</Badge>\n        )}\n       \n      </span>\n    </>\n  );\n};\n\nexport default Status;\n","import React, { useContext } from \"react\";\nimport { Select } from \"@windmill/react-ui\";\n\nimport OrderServices from \"services/OrderServices\";\nimport { notifySuccess, notifyError } from \"utils/toast\";\nimport { SidebarContext } from \"context/SidebarContext\";\n\nconst SelectStatus = ({ id, order }) => {\n  // console.log('id',id ,'order',order)\n  const { setIsUpdate } = useContext(SidebarContext);\n  const handleChangeStatus = (id, status) => {\n    // return notifyError(\"CRUD operation is disabled for this option!\");\n    OrderServices.updateOrder(id, { status: status })\n      .then((res) => {\n        notifySuccess(res.message);\n        setIsUpdate(true);\n      })\n      .catch((err) => notifyError(err.message));\n  };\n\n  return (\n    <>\n      <Select\n        onChange={(e) => handleChangeStatus(id, e.target.value)}\n        className=\"border border-gray-50 bg-gray-50 dark:border-gray-700 h-8 rounded-md text-xs focus:border-gray-400 focus:outline-none\"\n      >\n        <option value=\"status\" defaultValue hidden>\n          {order?.status}\n        </option>\n        <option defaultValue={order?.status === \"Delivered\"} value=\"Delivered\">\n          Delivered\n        </option>\n        <option defaultValue={order?.status === \"Pending\"} value=\"Pending\">\n          Pending\n        </option>\n        <option\n          defaultValue={order?.status === \"Processing\"}\n          value=\"Processing\"\n        >\n          Processing\n        </option>\n        <option defaultValue={order?.status === \"Cancel\"} value=\"Cancel\">\n          Cancel\n        </option>\n      </Select>\n    </>\n  );\n};\n\nexport default SelectStatus;\n"],"sourceRoot":""}